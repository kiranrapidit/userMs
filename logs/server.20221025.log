{"name":"userMS-Dev","hostname":"DESKTOP-NC394PI","pid":20492,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T11:42:15.605Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":11304,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T12:00:13.168Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":8760,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T12:02:08.214Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":3800,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T12:03:01.864Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":11896,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T12:05:42.100Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19592,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T12:06:00.719Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":20696,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T12:09:27.707Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":1140,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T12:11:22.903Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":5528,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T12:12:11.750Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18812,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T12:12:31.435Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":11652,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T12:12:48.785Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21432,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T12:13:29.132Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":3492,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T12:31:43.567Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13644,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T12:54:44.281Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":17416,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T12:55:38.912Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19128,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T12:56:10.445Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":14164,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:07:07.590Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":536,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:11:26.075Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12160,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:11:37.495Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":16760,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:12:23.707Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":2820,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:27:12.067Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18556,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:33:14.402Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":17336,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:33:40.544Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19864,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:33:46.162Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":14076,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:34:58.815Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":17832,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:37:01.575Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18456,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:37:04.217Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":16060,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:38:39.705Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":16060,"level":30,"msg":"Unable to connect to the database:  HostNotFoundError [SequelizeHostNotFoundError]: getaddrinfo ENOTFOUND localhost::3306\n    at ConnectionManager.connect (C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\dialects\\mysql\\connection-manager.js:96:17)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async ConnectionManager._connect (C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\dialects\\abstract\\connection-manager.js:220:24)\n    at async C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\dialects\\abstract\\connection-manager.js:174:32\n    at async ConnectionManager.getConnection (C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\dialects\\abstract\\connection-manager.js:197:7)\n    at async C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\sequelize.js:304:26\n    at async Sequelize.authenticate (C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\sequelize.js:456:5) {\n  parent: Error: getaddrinfo ENOTFOUND localhost::3306\n      at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:109:26) {\n    errno: -3008,\n    code: 'ENOTFOUND',\n    syscall: 'getaddrinfo',\n    hostname: 'localhost::3306',\n    fatal: true\n  },\n  original: Error: getaddrinfo ENOTFOUND localhost::3306\n      at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:109:26) {\n    errno: -3008,\n    code: 'ENOTFOUND',\n    syscall: 'getaddrinfo',\n    hostname: 'localhost::3306',\n    fatal: true\n  }\n}","time":"2022-10-25T13:38:39.719Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19900,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:38:59.987Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19900,"level":30,"msg":"Unable to connect to the database:  HostNotFoundError [SequelizeHostNotFoundError]: getaddrinfo ENOTFOUND localhost::3306\n    at ConnectionManager.connect (C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\dialects\\mysql\\connection-manager.js:96:17)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async ConnectionManager._connect (C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\dialects\\abstract\\connection-manager.js:220:24)\n    at async C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\dialects\\abstract\\connection-manager.js:174:32\n    at async ConnectionManager.getConnection (C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\dialects\\abstract\\connection-manager.js:197:7)\n    at async C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\sequelize.js:304:26\n    at async Sequelize.authenticate (C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\sequelize.js:456:5) {\n  parent: Error: getaddrinfo ENOTFOUND localhost::3306\n      at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:109:26) {\n    errno: -3008,\n    code: 'ENOTFOUND',\n    syscall: 'getaddrinfo',\n    hostname: 'localhost::3306',\n    fatal: true\n  },\n  original: Error: getaddrinfo ENOTFOUND localhost::3306\n      at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:109:26) {\n    errno: -3008,\n    code: 'ENOTFOUND',\n    syscall: 'getaddrinfo',\n    hostname: 'localhost::3306',\n    fatal: true\n  }\n}","time":"2022-10-25T13:39:00.003Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":14736,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:39:06.368Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":14736,"level":30,"msg":"Unable to connect to the database:  HostNotFoundError [SequelizeHostNotFoundError]: getaddrinfo ENOTFOUND localhost::3306\n    at ConnectionManager.connect (C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\dialects\\mysql\\connection-manager.js:96:17)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async ConnectionManager._connect (C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\dialects\\abstract\\connection-manager.js:220:24)\n    at async C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\dialects\\abstract\\connection-manager.js:174:32\n    at async ConnectionManager.getConnection (C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\dialects\\abstract\\connection-manager.js:197:7)\n    at async C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\sequelize.js:304:26\n    at async Sequelize.authenticate (C:\\projects\\user-api\\userMS\\node_modules\\Sequelize\\lib\\sequelize.js:456:5) {\n  parent: Error: getaddrinfo ENOTFOUND localhost::3306\n      at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:109:26) {\n    errno: -3008,\n    code: 'ENOTFOUND',\n    syscall: 'getaddrinfo',\n    hostname: 'localhost::3306',\n    fatal: true\n  },\n  original: Error: getaddrinfo ENOTFOUND localhost::3306\n      at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:109:26) {\n    errno: -3008,\n    code: 'ENOTFOUND',\n    syscall: 'getaddrinfo',\n    hostname: 'localhost::3306',\n    fatal: true\n  }\n}","time":"2022-10-25T13:39:06.428Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":9152,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:39:38.953Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":9152,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T13:39:39.543Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":17892,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:42:58.468Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":17892,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T13:42:58.530Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":11896,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T13:55:31.774Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":11896,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T13:55:31.849Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":17620,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T14:01:03.946Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":17620,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T14:01:03.987Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":17308,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T14:02:28.263Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":17308,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T14:02:28.315Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":16176,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T14:10:54.772Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":16176,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T14:10:54.817Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":15112,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T14:11:31.218Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":15112,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T14:11:31.267Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18272,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T14:11:53.509Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18272,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T14:11:53.567Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12896,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T14:17:39.192Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12896,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T14:17:39.243Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13956,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T14:17:57.343Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13956,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T14:17:57.406Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13500,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T16:40:18.874Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13500,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T16:40:19.153Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":20192,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:02:49.758Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":20192,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:02:49.832Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21904,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:04:04.450Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21904,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:04:04.507Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21792,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:04:48.522Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21792,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:04:48.596Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":7052,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:04:54.989Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":7052,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:04:55.056Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23276,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:05:07.496Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23276,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:05:07.564Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23068,"level":30,"msg":"db database:  {\n  Sequelize: <ref *7> [class Sequelize] {\n    version: [Getter],\n    options: { hooks: {} },\n    Utils: {\n      classToInvokable: [Function: classToInvokable],\n      joinSQLFragments: [Function: joinSQLFragments],\n      useInflection: [Function: useInflection],\n      camelizeIf: [Function: camelizeIf],\n      underscoredIf: [Function: underscoredIf],\n      isPrimitive: [Function: isPrimitive],\n      mergeDefaults: [Function: mergeDefaults],\n      merge: [Function: merge],\n      spliceStr: [Function: spliceStr],\n      camelize: [Function: camelize],\n      underscore: [Function: underscore],\n      singularize: [Function: singularize],\n      pluralize: [Function: pluralize],\n      format: [Function: format],\n      formatNamedParameters: [Function: formatNamedParameters],\n      cloneDeep: [Function: cloneDeep],\n      mapFinderOptions: [Function: mapFinderOptions],\n      mapOptionFieldNames: [Function: mapOptionFieldNames],\n      mapWhereFieldNames: [Function: mapWhereFieldNames],\n      mapValueFieldNames: [Function: mapValueFieldNames],\n      isColString: [Function: isColString],\n      canTreatArrayAsAnd: [Function: canTreatArrayAsAnd],\n      combineTableNames: [Function: combineTableNames],\n      toDefaultValue: [Function: toDefaultValue],\n      defaultValueSchemable: [Function: defaultValueSchemable],\n      removeNullValuesFromHash: [Function: removeNullValuesFromHash],\n      now: [Function: now],\n      TICK_CHAR: '`',\n      addTicks: [Function: addTicks],\n      removeTicks: [Function: removeTicks],\n      flattenObjectDeep: [Function: flattenObjectDeep],\n      SequelizeMethod: [class SequelizeMethod],\n      Fn: [class Fn extends SequelizeMethod],\n      Col: [class Col extends SequelizeMethod],\n      Cast: [class Cast extends SequelizeMethod],\n      Literal: [class Literal extends SequelizeMethod],\n      Json: [class Json extends SequelizeMethod],\n      Where: [class Where extends SequelizeMethod],\n      getOperators: [Function: getOperators],\n      getComplexKeys: [Function: getComplexKeys],\n      getComplexSize: [Function: getComplexSize],\n      isWhereEmpty: [Function: isWhereEmpty],\n      generateEnumName: [Function: generateEnumName],\n      camelizeObjectKeys: [Function: camelizeObjectKeys],\n      defaults: [Function: defaults],\n      nameIndex: [Function: nameIndex],\n      intersects: [Function: intersects],\n      safeStringifyJson: [Function: safeStringifyJson]\n    },\n    Op: {\n      eq: Symbol(eq),\n      ne: Symbol(ne),\n      gte: Symbol(gte),\n      gt: Symbol(gt),\n      lte: Symbol(lte),\n      lt: Symbol(lt),\n      not: Symbol(not),\n      is: Symbol(is),\n      in: Symbol(in),\n      notIn: Symbol(notIn),\n      like: Symbol(like),\n      notLike: Symbol(notLike),\n      iLike: Symbol(iLike),\n      notILike: Symbol(notILike),\n      startsWith: Symbol(startsWith),\n      endsWith: Symbol(endsWith),\n      substring: Symbol(substring),\n      regexp: Symbol(regexp),\n      notRegexp: Symbol(notRegexp),\n      iRegexp: Symbol(iRegexp),\n      notIRegexp: Symbol(notIRegexp),\n      between: Symbol(between),\n      notBetween: Symbol(notBetween),\n      overlap: Symbol(overlap),\n      contains: Symbol(contains),\n      contained: Symbol(contained),\n      adjacent: Symbol(adjacent),\n      strictLeft: Symbol(strictLeft),\n      strictRight: Symbol(strictRight),\n      noExtendRight: Symbol(noExtendRight),\n      noExtendLeft: Symbol(noExtendLeft),\n      and: Symbol(and),\n      or: Symbol(or),\n      any: Symbol(any),\n      all: Symbol(all),\n      values: Symbol(values),\n      col: Symbol(col),\n      placeholder: Symbol(placeholder),\n      join: Symbol(join),\n      match: Symbol(match)\n    },\n    TableHints: {\n      NOLOCK: 'NOLOCK',\n      READUNCOMMITTED: 'READUNCOMMITTED',\n      UPDLOCK: 'UPDLOCK',\n      REPEATABLEREAD: 'REPEATABLEREAD',\n      SERIALIZABLE: 'SERIALIZABLE',\n      READCOMMITTED: 'READCOMMITTED',\n      TABLOCK: 'TABLOCK',\n      TABLOCKX: 'TABLOCKX',\n      PAGLOCK: 'PAGLOCK',\n      ROWLOCK: 'ROWLOCK',\n      NOWAIT: 'NOWAIT',\n      READPAST: 'READPAST',\n      XLOCK: 'XLOCK',\n      SNAPSHOT: 'SNAPSHOT',\n      NOEXPAND: 'NOEXPAND'\n    },\n    IndexHints: { USE: 'USE', FORCE: 'FORCE', IGNORE: 'IGNORE' },\n    Transaction: <ref *1> [class Transaction] {\n      Transaction: [Circular *1],\n      default: [Circular *1]\n    },\n    QueryTypes: {\n      SELECT: 'SELECT',\n      INSERT: 'INSERT',\n      UPDATE: 'UPDATE',\n      BULKUPDATE: 'BULKUPDATE',\n      BULKDELETE: 'BULKDELETE',\n      DELETE: 'DELETE',\n      UPSERT: 'UPSERT',\n      VERSION: 'VERSION',\n      SHOWTABLES: 'SHOWTABLES',\n      SHOWINDEXES: 'SHOWINDEXES',\n      DESCRIBE: 'DESCRIBE',\n      RAW: 'RAW',\n      FOREIGNKEYS: 'FOREIGNKEYS',\n      SHOWCONSTRAINTS: 'SHOWCONSTRAINTS'\n    },\n    Validator: <ref *2> {\n      version: '13.7.0',\n      toDate: [Function],\n      toFloat: [Function],\n      toInt: [Function],\n      toBoolean: [Function],\n      equals: [Function],\n      contains: [Function: contains],\n      matches: [Function],\n      isEmail: [Function],\n      isURL: [Function],\n      isMACAddress: [Function],\n      isIP: [Function],\n      isIPRange: [Function],\n      isFQDN: [Function],\n      isBoolean: [Function],\n      isIBAN: [Function: isIBAN],\n      isBIC: [Function],\n      isAlpha: [Function: isAlpha],\n      isAlphaLocales: [Array],\n      isAlphanumeric: [Function: isAlphanumeric],\n      isAlphanumericLocales: [Array],\n      isNumeric: [Function],\n      isPassportNumber: [Function],\n      isPort: [Function],\n      isLowercase: [Function],\n      isUppercase: [Function],\n      isAscii: [Function],\n      isFullWidth: [Function: isFullWidth],\n      isHalfWidth: [Function: isHalfWidth],\n      isVariableWidth: [Function],\n      isMultibyte: [Function],\n      isSemVer: [Function],\n      isSurrogatePair: [Function],\n      isInt: [Function],\n      isIMEI: [Function],\n      isFloat: [Function: isFloat],\n      isFloatLocales: [Array],\n      isDecimal: [Function: isDecimal],\n      isHexadecimal: [Function],\n      isOctal: [Function],\n      isDivisibleBy: [Function],\n      isHexColor: [Function],\n      isRgbColor: [Function],\n      isHSL: [Function],\n      isISRC: [Function],\n      isMD5: [Function],\n      isHash: [Function],\n      isJWT: [Function],\n      isJSON: [Function],\n      isEmpty: [Function],\n      isLength: [Function],\n      isLocale: [Function],\n      isByteLength: [Function],\n      isUUID: [Function],\n      isMongoId: [Function],\n      isAfter: [Function],\n      isBefore: [Function],\n      isIn: [Function],\n      isCreditCard: [Function],\n      isIdentityCard: [Function],\n      isEAN: [Function],\n      isISIN: [Function],\n      isISBN: [Function],\n      isISSN: [Function],\n      isMobilePhone: [Function: isMobilePhone],\n      isMobilePhoneLocales: [Array],\n      isPostalCode: [Function: isPostalCode],\n      isPostalCodeLocales: [Array],\n      isEthereumAddress: [Function],\n      isCurrency: [Function],\n      isBtcAddress: [Function],\n      isISO8601: [Function],\n      isRFC3339: [Function],\n      isISO31661Alpha2: [Function: isISO31661Alpha2],\n      isISO31661Alpha3: [Function],\n      isISO4217: [Function: isISO4217],\n      isBase32: [Function],\n      isBase58: [Function],\n      isBase64: [Function],\n      isDataURI: [Function],\n      isMagnetURI: [Function],\n      isMimeType: [Function],\n      isLatLong: [Function],\n      ltrim: [Function],\n      rtrim: [Function],\n      trim: [Function],\n      escape: [Function],\n      unescape: [Function],\n      stripLow: [Function],\n      whitelist: [Function],\n      blacklist: [Function],\n      isWhitelisted: [Function],\n      normalizeEmail: [Function],\n      toString: [Function: toString],\n      isSlug: [Function],\n      isStrongPassword: [Function],\n      isTaxID: [Function],\n      isDate: [Function (anonymous)],\n      isLicensePlate: [Function],\n      isVAT: [Function: isVAT],\n      ibanLocales: [Array],\n      default: [Circular *2],\n      isImmutable: [Function (anonymous)],\n      notNull: [Function (anonymous)],\n      extend: [Function: extend],\n      notEmpty: [Function: notEmpty],\n      len: [Function: len],\n      isUrl: [Function: isUrl],\n      isIPv6: [Function: isIPv6],\n      isIPv4: [Function: isIPv4],\n      notIn: [Function: notIn],\n      regex: [Function: regex],\n      notRegex: [Function: notRegex],\n      min: [Function: min],\n      max: [Function: max],\n      not: [Function: not],\n      notContains: [Function: notContains],\n      is: [Function: is],\n      isNull: [Function]\n    },\n    Model: Model,\n    QueryInterface: [class QueryInterface],\n    BelongsTo: <ref *3> [class BelongsTo extends Association] {\n      BelongsTo: [Circular *3],\n      default: [Circular *3]\n    },\n    HasOne: [class HasOne extends Association],\n    HasMany: <ref *4> [class HasMany extends Association] {\n      HasMany: [Circular *4],\n      default: [Circular *4]\n    },\n    BelongsToMany: <ref *5> [class BelongsToMany extends Association] {\n      BelongsToMany: [Circular *5],\n      default: [Circular *5]\n    },\n    DataTypes: {\n      ABSTRACT: [Function],\n      STRING: [Function],\n      CHAR: [Function],\n      TEXT: [Function],\n      NUMBER: [Function],\n      TINYINT: [Function],\n      SMALLINT: [Function],\n      MEDIUMINT: [Function],\n      INTEGER: [Function],\n      BIGINT: [Function],\n      FLOAT: [Function],\n      TIME: [Function],\n      DATE: [Function],\n      DATEONLY: [Function],\n      BOOLEAN: [Function],\n      NOW: [Function],\n      BLOB: [Function],\n      DECIMAL: [Function],\n      NUMERIC: [Function],\n      UUID: [Function],\n      UUIDV1: [Function],\n      UUIDV4: [Function],\n      HSTORE: [Function],\n      JSON: [Function],\n      JSONB: [Function],\n      VIRTUAL: [Function],\n      ARRAY: [Function],\n      ENUM: [Function],\n      RANGE: [Function],\n      REAL: [Function],\n      'DOUBLE PRECISION': [Function],\n      DOUBLE: [Function],\n      GEOMETRY: [Function],\n      GEOGRAPHY: [Function],\n      CIDR: [Function],\n      INET: [Function],\n      MACADDR: [Function],\n      CITEXT: [Function],\n      TSVECTOR: [Function],\n      postgres: [Object],\n      mysql: [Object],\n      mariadb: [Object],\n      sqlite: [Object],\n      mssql: [Object],\n      db2: [Object],\n      snowflake: [Object],\n      oracle: [Object]\n    },\n    ABSTRACT: [class ABSTRACT] { types: {}, key: 'ABSTRACT' },\n    STRING: [class STRING extends ABSTRACT] { types: [Object], key: 'STRING' },\n    CHAR: [class CHAR extends STRING] { types: [Object], key: 'CHAR' },\n    TEXT: [class TEXT extends ABSTRACT] { types: [Object], key: 'TEXT' },\n    NUMBER: [class NUMBER extends ABSTRACT] { types: {}, key: 'NUMBER' },\n    TINYINT: [class TINYINT extends INTEGER] { types: [Object], key: 'TINYINT' },\n    SMALLINT: [class SMALLINT extends INTEGER] {\n      types: [Object],\n      key: 'SMALLINT'\n    },\n    MEDIUMINT: [class MEDIUMINT extends INTEGER] {\n      types: [Object],\n      key: 'MEDIUMINT'\n    },\n    INTEGER: [class INTEGER extends NUMBER] { types: [Object], key: 'INTEGER' },\n    BIGINT: [class BIGINT extends INTEGER] { types: [Object], key: 'BIGINT' },\n    FLOAT: [class FLOAT extends NUMBER] { types: [Object], key: 'FLOAT' },\n    TIME: [class TIME extends ABSTRACT] { types: [Object], key: 'TIME' },\n    DATE: [class DATE extends ABSTRACT] { types: [Object], key: 'DATE' },\n    DATEONLY: [class DATEONLY extends ABSTRACT] {\n      types: [Object],\n      key: 'DATEONLY'\n    },\n    BOOLEAN: [class BOOLEAN extends ABSTRACT] {\n      parse: [Function: _sanitize],\n      types: [Object],\n      key: 'BOOLEAN'\n    },\n    NOW: [class NOW extends ABSTRACT] { types: {}, key: 'NOW' },\n    BLOB: [class BLOB extends ABSTRACT] { types: [Object], key: 'BLOB' },\n    DECIMAL: [class DECIMAL extends NUMBER] { types: [Object], key: 'DECIMAL' },\n    NUMERIC: [class DECIMAL extends NUMBER] { types: [Object], key: 'DECIMAL' },\n    UUID: [class UUID extends ABSTRACT] { types: [Object], key: 'UUID' },\n    UUIDV1: [class UUIDV1 extends ABSTRACT] { types: {}, key: 'UUIDV1' },\n    UUIDV4: [class UUIDV4 extends ABSTRACT] { types: {}, key: 'UUIDV4' },\n    HSTORE: [class HSTORE extends ABSTRACT] { types: [Object], key: 'HSTORE' },\n    JSON: [class JSONTYPE extends ABSTRACT] { types: [Object], key: 'JSON' },\n    JSONB: [class JSONB extends JSONTYPE] { types: [Object], key: 'JSONB' },\n    VIRTUAL: [class VIRTUAL extends ABSTRACT] { types: {}, key: 'VIRTUAL' },\n    ARRAY: [class ARRAY extends ABSTRACT] { types: {}, key: 'ARRAY' },\n    ENUM: [class ENUM extends ABSTRACT] { types: [Object], key: 'ENUM' },\n    RANGE: [class RANGE extends ABSTRACT] { types: [Object], key: 'RANGE' },\n    REAL: [class REAL extends NUMBER] { types: [Object], key: 'REAL' },\n    'DOUBLE PRECISION': [class DOUBLE extends NUMBER] {\n      types: [Object],\n      key: 'DOUBLE PRECISION'\n    },\n    DOUBLE: [class DOUBLE extends NUMBER] {\n      types: [Object],\n      key: 'DOUBLE PRECISION'\n    },\n    GEOMETRY: [class GEOMETRY extends ABSTRACT] {\n      types: [Object],\n      key: 'GEOMETRY'\n    },\n    GEOGRAPHY: [class GEOGRAPHY extends ABSTRACT] {\n      types: [Object],\n      key: 'GEOGRAPHY'\n    },\n    CIDR: [class CIDR extends ABSTRACT] { types: [Object], key: 'CIDR' },\n    INET: [class INET extends ABSTRACT] { types: [Object], key: 'INET' },\n    MACADDR: [class MACADDR extends ABSTRACT] { types: [Object], key: 'MACADDR' },\n    CITEXT: [class CITEXT extends ABSTRACT] { types: [Object], key: 'CITEXT' },\n    TSVECTOR: [class TSVECTOR extends ABSTRACT] {\n      types: [Object],\n      key: 'TSVECTOR'\n    },\n    postgres: {\n      DECIMAL: [class DECIMAL extends DECIMAL],\n      BLOB: [class BLOB extends BLOB],\n      STRING: [class STRING extends STRING],\n      CHAR: [class CHAR extends CHAR],\n      TEXT: [class TEXT extends TEXT],\n      CITEXT: [class CITEXT extends CITEXT],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      INTEGER: [Function],\n      BIGINT: [class BIGINT extends BIGINT],\n      BOOLEAN: [Function],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      REAL: [class REAL extends REAL],\n      'DOUBLE PRECISION': [class DOUBLE extends DOUBLE],\n      FLOAT: [class FLOAT extends FLOAT],\n      GEOMETRY: [class GEOMETRY extends GEOMETRY],\n      GEOGRAPHY: [class GEOGRAPHY extends GEOGRAPHY],\n      HSTORE: [class HSTORE extends HSTORE],\n      RANGE: [class RANGE extends RANGE],\n      ENUM: [class ENUM extends ENUM]\n    },\n    mysql: {\n      ENUM: [class ENUM extends ENUM],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      UUID: [class UUID extends UUID],\n      GEOMETRY: [class GEOMETRY extends GEOMETRY],\n      DECIMAL: [class DECIMAL extends DECIMAL],\n      JSON: [class JSONTYPE extends JSONTYPE]\n    },\n    mariadb: {\n      ENUM: [class ENUM extends ENUM],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      UUID: [class UUID extends UUID],\n      GEOMETRY: [class GEOMETRY extends GEOMETRY],\n      DECIMAL: [class DECIMAL extends DECIMAL],\n      JSON: [class JSONTYPE extends JSONTYPE]\n    },\n    sqlite: {\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      STRING: [class STRING extends STRING],\n      CHAR: [class CHAR extends CHAR],\n      NUMBER: [class NUMBER extends NUMBER],\n      FLOAT: [Function],\n      REAL: [Function],\n      'DOUBLE PRECISION': [Function],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      MEDIUMINT: [class MEDIUMINT extends MEDIUMINT],\n      INTEGER: [class INTEGER extends INTEGER],\n      BIGINT: [class BIGINT extends BIGINT],\n      TEXT: [class TEXT extends TEXT],\n      ENUM: [class ENUM extends ENUM],\n      JSON: [class JSONTYPE extends JSONTYPE],\n      CITEXT: [class CITEXT extends CITEXT]\n    },\n    mssql: {\n      BLOB: [class BLOB extends BLOB],\n      BOOLEAN: [class BOOLEAN extends BOOLEAN],\n      ENUM: [class ENUM extends ENUM],\n      STRING: [class STRING extends STRING],\n      UUID: [class UUID extends UUID],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      NOW: [class NOW extends NOW],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      INTEGER: [class INTEGER extends INTEGER],\n      BIGINT: [class BIGINT extends BIGINT],\n      REAL: [class REAL extends REAL],\n      FLOAT: [class FLOAT extends FLOAT],\n      TEXT: [class TEXT extends TEXT]\n    },\n    db2: {\n      BLOB: [class BLOB extends BLOB],\n      BOOLEAN: [Function],\n      ENUM: [class ENUM extends ENUM],\n      STRING: [class STRING extends STRING],\n      UUID: [class UUID extends UUID],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      NOW: [class NOW extends NOW],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      INTEGER: [class INTEGER extends INTEGER],\n      DOUBLE: [Function],\n      'DOUBLE PRECISION': [Function],\n      BIGINT: [class BIGINT extends BIGINT],\n      REAL: [class REAL extends REAL],\n      FLOAT: [class FLOAT extends FLOAT],\n      TEXT: [class TEXT extends TEXT]\n    },\n    snowflake: {\n      TEXT: [class TEXT extends TEXT],\n      DATE: [class DATE extends DATE],\n      BOOLEAN: [class BOOLEAN extends BOOLEAN],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      UUID: [class UUID extends UUID],\n      JSON: [class JSONTYPE extends JSONTYPE]\n    },\n    oracle: {\n      BOOLEAN: [class BOOLEAN extends BOOLEAN],\n      'DOUBLE PRECISION': [class DOUBLE extends DOUBLE],\n      DOUBLE: [class DOUBLE extends DOUBLE],\n      STRING: [class STRING extends STRING],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      MEDIUMINT: [class MEDIUMINT extends MEDIUMINT],\n      BIGINT: [class BIGINT extends BIGINT],\n      NUMBER: [class NUMBER extends NUMBER],\n      INTEGER: [class INTEGER extends INTEGER],\n      FLOAT: [class FLOAT extends FLOAT],\n      UUID: [class UUID extends UUID],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      DATE: [class DATE extends DATE],\n      NOW: [class NOW extends NOW],\n      BLOB: [class BLOB extends BLOB],\n      ENUM: [class ENUM extends ENUM],\n      TEXT: [class TEXT extends TEXT],\n      CHAR: [class CHAR extends CHAR],\n      JSON: [class JSONTYPE extends JSONTYPE],\n      REAL: [class REAL extends REAL],\n      DECIMAL: [class DECIMAL extends DECIMAL]\n    },\n    Deferrable: {\n      INITIALLY_DEFERRED: [class INITIALLY_DEFERRED extends ABSTRACT],\n      INITIALLY_IMMEDIATE: [class INITIALLY_IMMEDIATE extends ABSTRACT],\n      NOT: [class NOT extends ABSTRACT],\n      SET_DEFERRED: [class SET_DEFERRED extends ABSTRACT],\n      SET_IMMEDIATE: [class SET_IMMEDIATE extends ABSTRACT]\n    },\n    Association: <ref *6> [class Association] {\n      BelongsTo: [Function],\n      HasOne: [class HasOne extends Association],\n      HasMany: [Function],\n      BelongsToMany: [Function],\n      default: [Circular *6],\n      Association: [Circular *6]\n    },\n    useInflection: [Function: useInflection],\n    _setupHooks: [Function: _setupHooks],\n    runHooks: [AsyncFunction: runHooks],\n    addHook: [Function: addHook],\n    removeHook: [Function: removeHook],\n    hasHook: [Function: hasHook],\n    hasHooks: [Function: hasHook],\n    beforeValidate: [Function (anonymous)],\n    afterValidate: [Function (anonymous)],\n    validationFailed: [Function (anonymous)],\n    beforeCreate: [Function (anonymous)],\n    afterCreate: [Function (anonymous)],\n    beforeDestroy: [Function (anonymous)],\n    afterDestroy: [Function (anonymous)],\n    beforeRestore: [Function (anonymous)],\n    afterRestore: [Function (anonymous)],\n    beforeUpdate: [Function (anonymous)],\n    afterUpdate: [Function (anonymous)],\n    beforeSave: [Function (anonymous)],\n    afterSave: [Function (anonymous)],\n    beforeUpsert: [Function (anonymous)],\n    afterUpsert: [Function (anonymous)],\n    beforeBulkCreate: [Function (anonymous)],\n    afterBulkCreate: [Function (anonymous)],\n    beforeBulkDestroy: [Function (anonymous)],\n    afterBulkDestroy: [Function (anonymous)],\n    beforeBulkRestore: [Function (anonymous)],\n    afterBulkRestore: [Function (anonymous)],\n    beforeBulkUpdate: [Function (anonymous)],\n    afterBulkUpdate: [Function (anonymous)],\n    beforeFind: [Function (anonymous)],\n    beforeFindAfterExpandIncludeAll: [Function (anonymous)],\n    beforeFindAfterOptions: [Function (anonymous)],\n    afterFind: [Function (anonymous)],\n    beforeCount: [Function (anonymous)],\n    beforeDefine: [Function (anonymous)],\n    afterDefine: [Function (anonymous)],\n    beforeInit: [Function (anonymous)],\n    afterInit: [Function (anonymous)],\n    beforeAssociate: [Function (anonymous)],\n    afterAssociate: [Function (anonymous)],\n    beforeConnect: [Function (anonymous)],\n    afterConnect: [Function (anonymous)],\n    beforeDisconnect: [Function (anonymous)],\n    afterDisconnect: [Function (anonymous)],\n    beforeSync: [Function (anonymous)],\n    afterSync: [Function (anonymous)],\n    beforeBulkSync: [Function (anonymous)],\n    afterBulkSync: [Function (anonymous)],\n    beforeQuery: [Function (anonymous)],\n    afterQuery: [Function (anonymous)],\n    Error: [class BaseError extends Error],\n    AccessDeniedError: [class AccessDeniedError extends ConnectionError],\n    AggregateError: [class AggregateError extends BaseError],\n    AssociationError: [class AssociationError extends BaseError],\n    AsyncQueueError: [class AsyncQueueError extends BaseError],\n    BaseError: [class BaseError extends Error],\n    BulkRecordError: [class BulkRecordError extends BaseError],\n    ConnectionAcquireTimeoutError: [class ConnectionAcquireTimeoutError extends ConnectionError],\n    ConnectionError: [class ConnectionError extends BaseError],\n    ConnectionRefusedError: [class ConnectionRefusedError extends ConnectionError],\n    ConnectionTimedOutError: [class ConnectionTimedOutError extends ConnectionError],\n    DatabaseError: [class DatabaseError extends BaseError],\n    EagerLoadingError: [class EagerLoadingError extends BaseError],\n    EmptyResultError: [class EmptyResultError extends BaseError],\n    ExclusionConstraintError: [class ExclusionConstraintError extends DatabaseError],\n    ForeignKeyConstraintError: [class ForeignKeyConstraintError extends DatabaseError],\n    HostNotFoundError: [class HostNotFoundError extends ConnectionError],\n    HostNotReachableError: [class HostNotReachableError extends ConnectionError],\n    InstanceError: [class InstanceError extends BaseError],\n    InvalidConnectionError: [class InvalidConnectionError extends ConnectionError],\n    OptimisticLockError: [class OptimisticLockError extends BaseError],\n    QueryError: [class QueryError extends BaseError],\n    SequelizeScopeError: [class SequelizeScopeError extends BaseError],\n    TimeoutError: [class TimeoutError extends DatabaseError],\n    UniqueConstraintError: [class UniqueConstraintError extends ValidationError],\n    UnknownConstraintError: [class UnknownConstraintError extends DatabaseError],\n    ValidationError: [class ValidationError extends BaseError],\n    ValidationErrorItem: [class ValidationErrorItem] {\n      TypeStringMap: [Object],\n      Origins: [Object]\n    },\n    ValidationErrorItemOrigin: { CORE: 'CORE', DB: 'DB', FUNCTION: 'FUNCTION' },\n    ValidationErrorItemType: {\n      'notnull violation': 'CORE',\n      'string violation': 'CORE',\n      'unique violation': 'DB',\n      'validation error': 'FUNCTION'\n    },\n    Sequelize: [Circular *7],\n    default: [Circular *7]\n  },\n  sequelize: <ref *8> Sequelize {\n    options: {\n      dialect: 'mysql',\n      dialectModule: null,\n      dialectModulePath: null,\n      host: 'localhost',\n      protocol: 'tcp',\n      define: {},\n      query: {},\n      sync: {},\n      timezone: '+00:00',\n      standardConformingStrings: true,\n      logging: [Function: log],\n      omitNull: false,\n      native: false,\n      replication: false,\n      ssl: undefined,\n      pool: [Object],\n      quoteIdentifiers: true,\n      hooks: {},\n      retry: [Object],\n      transactionType: 'DEFERRED',\n      isolationLevel: null,\n      databaseVersion: 0,\n      typeValidation: false,\n      benchmark: false,\n      minifyAliases: false,\n      logQueryParameters: false\n    },\n    config: {\n      database: 'tc_db',\n      username: 'root',\n      password: 'Root@123',\n      host: 'localhost',\n      port: 3306,\n      pool: [Object],\n      protocol: 'tcp',\n      native: false,\n      ssl: undefined,\n      replication: false,\n      dialectModule: null,\n      dialectModulePath: null,\n      keepDefaultTimezone: undefined,\n      dialectOptions: undefined\n    },\n    dialect: MysqlDialect {\n      sequelize: [Circular *8],\n      connectionManager: [ConnectionManager],\n      queryGenerator: [MySQLQueryGenerator],\n      queryInterface: [MySQLQueryInterface]\n    },\n    queryInterface: MySQLQueryInterface {\n      sequelize: [Circular *8],\n      queryGenerator: [MySQLQueryGenerator]\n    },\n    models: { tutorial: tutorial },\n    modelManager: ModelManager { models: [Array], sequelize: [Circular *8] },\n    connectionManager: ConnectionManager {\n      sequelize: [Circular *8],\n      config: [Object],\n      dialect: [MysqlDialect],\n      versionPromise: [Promise],\n      dialectName: 'mysql',\n      pool: [Pool],\n      lib: [Object]\n    }\n  },\n  tutorials: tutorial\n}","time":"2022-10-25T17:05:52.494Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23068,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:05:52.554Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23068,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:05:52.592Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22700,"level":30,"msg":"db database:  {\n  Sequelize: <ref *7> [class Sequelize] {\n    version: [Getter],\n    options: { hooks: {} },\n    Utils: {\n      classToInvokable: [Function: classToInvokable],\n      joinSQLFragments: [Function: joinSQLFragments],\n      useInflection: [Function: useInflection],\n      camelizeIf: [Function: camelizeIf],\n      underscoredIf: [Function: underscoredIf],\n      isPrimitive: [Function: isPrimitive],\n      mergeDefaults: [Function: mergeDefaults],\n      merge: [Function: merge],\n      spliceStr: [Function: spliceStr],\n      camelize: [Function: camelize],\n      underscore: [Function: underscore],\n      singularize: [Function: singularize],\n      pluralize: [Function: pluralize],\n      format: [Function: format],\n      formatNamedParameters: [Function: formatNamedParameters],\n      cloneDeep: [Function: cloneDeep],\n      mapFinderOptions: [Function: mapFinderOptions],\n      mapOptionFieldNames: [Function: mapOptionFieldNames],\n      mapWhereFieldNames: [Function: mapWhereFieldNames],\n      mapValueFieldNames: [Function: mapValueFieldNames],\n      isColString: [Function: isColString],\n      canTreatArrayAsAnd: [Function: canTreatArrayAsAnd],\n      combineTableNames: [Function: combineTableNames],\n      toDefaultValue: [Function: toDefaultValue],\n      defaultValueSchemable: [Function: defaultValueSchemable],\n      removeNullValuesFromHash: [Function: removeNullValuesFromHash],\n      now: [Function: now],\n      TICK_CHAR: '`',\n      addTicks: [Function: addTicks],\n      removeTicks: [Function: removeTicks],\n      flattenObjectDeep: [Function: flattenObjectDeep],\n      SequelizeMethod: [class SequelizeMethod],\n      Fn: [class Fn extends SequelizeMethod],\n      Col: [class Col extends SequelizeMethod],\n      Cast: [class Cast extends SequelizeMethod],\n      Literal: [class Literal extends SequelizeMethod],\n      Json: [class Json extends SequelizeMethod],\n      Where: [class Where extends SequelizeMethod],\n      getOperators: [Function: getOperators],\n      getComplexKeys: [Function: getComplexKeys],\n      getComplexSize: [Function: getComplexSize],\n      isWhereEmpty: [Function: isWhereEmpty],\n      generateEnumName: [Function: generateEnumName],\n      camelizeObjectKeys: [Function: camelizeObjectKeys],\n      defaults: [Function: defaults],\n      nameIndex: [Function: nameIndex],\n      intersects: [Function: intersects],\n      safeStringifyJson: [Function: safeStringifyJson]\n    },\n    Op: {\n      eq: Symbol(eq),\n      ne: Symbol(ne),\n      gte: Symbol(gte),\n      gt: Symbol(gt),\n      lte: Symbol(lte),\n      lt: Symbol(lt),\n      not: Symbol(not),\n      is: Symbol(is),\n      in: Symbol(in),\n      notIn: Symbol(notIn),\n      like: Symbol(like),\n      notLike: Symbol(notLike),\n      iLike: Symbol(iLike),\n      notILike: Symbol(notILike),\n      startsWith: Symbol(startsWith),\n      endsWith: Symbol(endsWith),\n      substring: Symbol(substring),\n      regexp: Symbol(regexp),\n      notRegexp: Symbol(notRegexp),\n      iRegexp: Symbol(iRegexp),\n      notIRegexp: Symbol(notIRegexp),\n      between: Symbol(between),\n      notBetween: Symbol(notBetween),\n      overlap: Symbol(overlap),\n      contains: Symbol(contains),\n      contained: Symbol(contained),\n      adjacent: Symbol(adjacent),\n      strictLeft: Symbol(strictLeft),\n      strictRight: Symbol(strictRight),\n      noExtendRight: Symbol(noExtendRight),\n      noExtendLeft: Symbol(noExtendLeft),\n      and: Symbol(and),\n      or: Symbol(or),\n      any: Symbol(any),\n      all: Symbol(all),\n      values: Symbol(values),\n      col: Symbol(col),\n      placeholder: Symbol(placeholder),\n      join: Symbol(join),\n      match: Symbol(match)\n    },\n    TableHints: {\n      NOLOCK: 'NOLOCK',\n      READUNCOMMITTED: 'READUNCOMMITTED',\n      UPDLOCK: 'UPDLOCK',\n      REPEATABLEREAD: 'REPEATABLEREAD',\n      SERIALIZABLE: 'SERIALIZABLE',\n      READCOMMITTED: 'READCOMMITTED',\n      TABLOCK: 'TABLOCK',\n      TABLOCKX: 'TABLOCKX',\n      PAGLOCK: 'PAGLOCK',\n      ROWLOCK: 'ROWLOCK',\n      NOWAIT: 'NOWAIT',\n      READPAST: 'READPAST',\n      XLOCK: 'XLOCK',\n      SNAPSHOT: 'SNAPSHOT',\n      NOEXPAND: 'NOEXPAND'\n    },\n    IndexHints: { USE: 'USE', FORCE: 'FORCE', IGNORE: 'IGNORE' },\n    Transaction: <ref *1> [class Transaction] {\n      Transaction: [Circular *1],\n      default: [Circular *1]\n    },\n    QueryTypes: {\n      SELECT: 'SELECT',\n      INSERT: 'INSERT',\n      UPDATE: 'UPDATE',\n      BULKUPDATE: 'BULKUPDATE',\n      BULKDELETE: 'BULKDELETE',\n      DELETE: 'DELETE',\n      UPSERT: 'UPSERT',\n      VERSION: 'VERSION',\n      SHOWTABLES: 'SHOWTABLES',\n      SHOWINDEXES: 'SHOWINDEXES',\n      DESCRIBE: 'DESCRIBE',\n      RAW: 'RAW',\n      FOREIGNKEYS: 'FOREIGNKEYS',\n      SHOWCONSTRAINTS: 'SHOWCONSTRAINTS'\n    },\n    Validator: <ref *2> {\n      version: '13.7.0',\n      toDate: [Function],\n      toFloat: [Function],\n      toInt: [Function],\n      toBoolean: [Function],\n      equals: [Function],\n      contains: [Function: contains],\n      matches: [Function],\n      isEmail: [Function],\n      isURL: [Function],\n      isMACAddress: [Function],\n      isIP: [Function],\n      isIPRange: [Function],\n      isFQDN: [Function],\n      isBoolean: [Function],\n      isIBAN: [Function: isIBAN],\n      isBIC: [Function],\n      isAlpha: [Function: isAlpha],\n      isAlphaLocales: [Array],\n      isAlphanumeric: [Function: isAlphanumeric],\n      isAlphanumericLocales: [Array],\n      isNumeric: [Function],\n      isPassportNumber: [Function],\n      isPort: [Function],\n      isLowercase: [Function],\n      isUppercase: [Function],\n      isAscii: [Function],\n      isFullWidth: [Function: isFullWidth],\n      isHalfWidth: [Function: isHalfWidth],\n      isVariableWidth: [Function],\n      isMultibyte: [Function],\n      isSemVer: [Function],\n      isSurrogatePair: [Function],\n      isInt: [Function],\n      isIMEI: [Function],\n      isFloat: [Function: isFloat],\n      isFloatLocales: [Array],\n      isDecimal: [Function: isDecimal],\n      isHexadecimal: [Function],\n      isOctal: [Function],\n      isDivisibleBy: [Function],\n      isHexColor: [Function],\n      isRgbColor: [Function],\n      isHSL: [Function],\n      isISRC: [Function],\n      isMD5: [Function],\n      isHash: [Function],\n      isJWT: [Function],\n      isJSON: [Function],\n      isEmpty: [Function],\n      isLength: [Function],\n      isLocale: [Function],\n      isByteLength: [Function],\n      isUUID: [Function],\n      isMongoId: [Function],\n      isAfter: [Function],\n      isBefore: [Function],\n      isIn: [Function],\n      isCreditCard: [Function],\n      isIdentityCard: [Function],\n      isEAN: [Function],\n      isISIN: [Function],\n      isISBN: [Function],\n      isISSN: [Function],\n      isMobilePhone: [Function: isMobilePhone],\n      isMobilePhoneLocales: [Array],\n      isPostalCode: [Function: isPostalCode],\n      isPostalCodeLocales: [Array],\n      isEthereumAddress: [Function],\n      isCurrency: [Function],\n      isBtcAddress: [Function],\n      isISO8601: [Function],\n      isRFC3339: [Function],\n      isISO31661Alpha2: [Function: isISO31661Alpha2],\n      isISO31661Alpha3: [Function],\n      isISO4217: [Function: isISO4217],\n      isBase32: [Function],\n      isBase58: [Function],\n      isBase64: [Function],\n      isDataURI: [Function],\n      isMagnetURI: [Function],\n      isMimeType: [Function],\n      isLatLong: [Function],\n      ltrim: [Function],\n      rtrim: [Function],\n      trim: [Function],\n      escape: [Function],\n      unescape: [Function],\n      stripLow: [Function],\n      whitelist: [Function],\n      blacklist: [Function],\n      isWhitelisted: [Function],\n      normalizeEmail: [Function],\n      toString: [Function: toString],\n      isSlug: [Function],\n      isStrongPassword: [Function],\n      isTaxID: [Function],\n      isDate: [Function (anonymous)],\n      isLicensePlate: [Function],\n      isVAT: [Function: isVAT],\n      ibanLocales: [Array],\n      default: [Circular *2],\n      isImmutable: [Function (anonymous)],\n      notNull: [Function (anonymous)],\n      extend: [Function: extend],\n      notEmpty: [Function: notEmpty],\n      len: [Function: len],\n      isUrl: [Function: isUrl],\n      isIPv6: [Function: isIPv6],\n      isIPv4: [Function: isIPv4],\n      notIn: [Function: notIn],\n      regex: [Function: regex],\n      notRegex: [Function: notRegex],\n      min: [Function: min],\n      max: [Function: max],\n      not: [Function: not],\n      notContains: [Function: notContains],\n      is: [Function: is],\n      isNull: [Function]\n    },\n    Model: Model,\n    QueryInterface: [class QueryInterface],\n    BelongsTo: <ref *3> [class BelongsTo extends Association] {\n      BelongsTo: [Circular *3],\n      default: [Circular *3]\n    },\n    HasOne: [class HasOne extends Association],\n    HasMany: <ref *4> [class HasMany extends Association] {\n      HasMany: [Circular *4],\n      default: [Circular *4]\n    },\n    BelongsToMany: <ref *5> [class BelongsToMany extends Association] {\n      BelongsToMany: [Circular *5],\n      default: [Circular *5]\n    },\n    DataTypes: {\n      ABSTRACT: [Function],\n      STRING: [Function],\n      CHAR: [Function],\n      TEXT: [Function],\n      NUMBER: [Function],\n      TINYINT: [Function],\n      SMALLINT: [Function],\n      MEDIUMINT: [Function],\n      INTEGER: [Function],\n      BIGINT: [Function],\n      FLOAT: [Function],\n      TIME: [Function],\n      DATE: [Function],\n      DATEONLY: [Function],\n      BOOLEAN: [Function],\n      NOW: [Function],\n      BLOB: [Function],\n      DECIMAL: [Function],\n      NUMERIC: [Function],\n      UUID: [Function],\n      UUIDV1: [Function],\n      UUIDV4: [Function],\n      HSTORE: [Function],\n      JSON: [Function],\n      JSONB: [Function],\n      VIRTUAL: [Function],\n      ARRAY: [Function],\n      ENUM: [Function],\n      RANGE: [Function],\n      REAL: [Function],\n      'DOUBLE PRECISION': [Function],\n      DOUBLE: [Function],\n      GEOMETRY: [Function],\n      GEOGRAPHY: [Function],\n      CIDR: [Function],\n      INET: [Function],\n      MACADDR: [Function],\n      CITEXT: [Function],\n      TSVECTOR: [Function],\n      postgres: [Object],\n      mysql: [Object],\n      mariadb: [Object],\n      sqlite: [Object],\n      mssql: [Object],\n      db2: [Object],\n      snowflake: [Object],\n      oracle: [Object]\n    },\n    ABSTRACT: [class ABSTRACT] { types: {}, key: 'ABSTRACT' },\n    STRING: [class STRING extends ABSTRACT] { types: [Object], key: 'STRING' },\n    CHAR: [class CHAR extends STRING] { types: [Object], key: 'CHAR' },\n    TEXT: [class TEXT extends ABSTRACT] { types: [Object], key: 'TEXT' },\n    NUMBER: [class NUMBER extends ABSTRACT] { types: {}, key: 'NUMBER' },\n    TINYINT: [class TINYINT extends INTEGER] { types: [Object], key: 'TINYINT' },\n    SMALLINT: [class SMALLINT extends INTEGER] {\n      types: [Object],\n      key: 'SMALLINT'\n    },\n    MEDIUMINT: [class MEDIUMINT extends INTEGER] {\n      types: [Object],\n      key: 'MEDIUMINT'\n    },\n    INTEGER: [class INTEGER extends NUMBER] { types: [Object], key: 'INTEGER' },\n    BIGINT: [class BIGINT extends INTEGER] { types: [Object], key: 'BIGINT' },\n    FLOAT: [class FLOAT extends NUMBER] { types: [Object], key: 'FLOAT' },\n    TIME: [class TIME extends ABSTRACT] { types: [Object], key: 'TIME' },\n    DATE: [class DATE extends ABSTRACT] { types: [Object], key: 'DATE' },\n    DATEONLY: [class DATEONLY extends ABSTRACT] {\n      types: [Object],\n      key: 'DATEONLY'\n    },\n    BOOLEAN: [class BOOLEAN extends ABSTRACT] {\n      parse: [Function: _sanitize],\n      types: [Object],\n      key: 'BOOLEAN'\n    },\n    NOW: [class NOW extends ABSTRACT] { types: {}, key: 'NOW' },\n    BLOB: [class BLOB extends ABSTRACT] { types: [Object], key: 'BLOB' },\n    DECIMAL: [class DECIMAL extends NUMBER] { types: [Object], key: 'DECIMAL' },\n    NUMERIC: [class DECIMAL extends NUMBER] { types: [Object], key: 'DECIMAL' },\n    UUID: [class UUID extends ABSTRACT] { types: [Object], key: 'UUID' },\n    UUIDV1: [class UUIDV1 extends ABSTRACT] { types: {}, key: 'UUIDV1' },\n    UUIDV4: [class UUIDV4 extends ABSTRACT] { types: {}, key: 'UUIDV4' },\n    HSTORE: [class HSTORE extends ABSTRACT] { types: [Object], key: 'HSTORE' },\n    JSON: [class JSONTYPE extends ABSTRACT] { types: [Object], key: 'JSON' },\n    JSONB: [class JSONB extends JSONTYPE] { types: [Object], key: 'JSONB' },\n    VIRTUAL: [class VIRTUAL extends ABSTRACT] { types: {}, key: 'VIRTUAL' },\n    ARRAY: [class ARRAY extends ABSTRACT] { types: {}, key: 'ARRAY' },\n    ENUM: [class ENUM extends ABSTRACT] { types: [Object], key: 'ENUM' },\n    RANGE: [class RANGE extends ABSTRACT] { types: [Object], key: 'RANGE' },\n    REAL: [class REAL extends NUMBER] { types: [Object], key: 'REAL' },\n    'DOUBLE PRECISION': [class DOUBLE extends NUMBER] {\n      types: [Object],\n      key: 'DOUBLE PRECISION'\n    },\n    DOUBLE: [class DOUBLE extends NUMBER] {\n      types: [Object],\n      key: 'DOUBLE PRECISION'\n    },\n    GEOMETRY: [class GEOMETRY extends ABSTRACT] {\n      types: [Object],\n      key: 'GEOMETRY'\n    },\n    GEOGRAPHY: [class GEOGRAPHY extends ABSTRACT] {\n      types: [Object],\n      key: 'GEOGRAPHY'\n    },\n    CIDR: [class CIDR extends ABSTRACT] { types: [Object], key: 'CIDR' },\n    INET: [class INET extends ABSTRACT] { types: [Object], key: 'INET' },\n    MACADDR: [class MACADDR extends ABSTRACT] { types: [Object], key: 'MACADDR' },\n    CITEXT: [class CITEXT extends ABSTRACT] { types: [Object], key: 'CITEXT' },\n    TSVECTOR: [class TSVECTOR extends ABSTRACT] {\n      types: [Object],\n      key: 'TSVECTOR'\n    },\n    postgres: {\n      DECIMAL: [class DECIMAL extends DECIMAL],\n      BLOB: [class BLOB extends BLOB],\n      STRING: [class STRING extends STRING],\n      CHAR: [class CHAR extends CHAR],\n      TEXT: [class TEXT extends TEXT],\n      CITEXT: [class CITEXT extends CITEXT],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      INTEGER: [Function],\n      BIGINT: [class BIGINT extends BIGINT],\n      BOOLEAN: [Function],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      REAL: [class REAL extends REAL],\n      'DOUBLE PRECISION': [class DOUBLE extends DOUBLE],\n      FLOAT: [class FLOAT extends FLOAT],\n      GEOMETRY: [class GEOMETRY extends GEOMETRY],\n      GEOGRAPHY: [class GEOGRAPHY extends GEOGRAPHY],\n      HSTORE: [class HSTORE extends HSTORE],\n      RANGE: [class RANGE extends RANGE],\n      ENUM: [class ENUM extends ENUM]\n    },\n    mysql: {\n      ENUM: [class ENUM extends ENUM],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      UUID: [class UUID extends UUID],\n      GEOMETRY: [class GEOMETRY extends GEOMETRY],\n      DECIMAL: [class DECIMAL extends DECIMAL],\n      JSON: [class JSONTYPE extends JSONTYPE]\n    },\n    mariadb: {\n      ENUM: [class ENUM extends ENUM],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      UUID: [class UUID extends UUID],\n      GEOMETRY: [class GEOMETRY extends GEOMETRY],\n      DECIMAL: [class DECIMAL extends DECIMAL],\n      JSON: [class JSONTYPE extends JSONTYPE]\n    },\n    sqlite: {\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      STRING: [class STRING extends STRING],\n      CHAR: [class CHAR extends CHAR],\n      NUMBER: [class NUMBER extends NUMBER],\n      FLOAT: [Function],\n      REAL: [Function],\n      'DOUBLE PRECISION': [Function],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      MEDIUMINT: [class MEDIUMINT extends MEDIUMINT],\n      INTEGER: [class INTEGER extends INTEGER],\n      BIGINT: [class BIGINT extends BIGINT],\n      TEXT: [class TEXT extends TEXT],\n      ENUM: [class ENUM extends ENUM],\n      JSON: [class JSONTYPE extends JSONTYPE],\n      CITEXT: [class CITEXT extends CITEXT]\n    },\n    mssql: {\n      BLOB: [class BLOB extends BLOB],\n      BOOLEAN: [class BOOLEAN extends BOOLEAN],\n      ENUM: [class ENUM extends ENUM],\n      STRING: [class STRING extends STRING],\n      UUID: [class UUID extends UUID],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      NOW: [class NOW extends NOW],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      INTEGER: [class INTEGER extends INTEGER],\n      BIGINT: [class BIGINT extends BIGINT],\n      REAL: [class REAL extends REAL],\n      FLOAT: [class FLOAT extends FLOAT],\n      TEXT: [class TEXT extends TEXT]\n    },\n    db2: {\n      BLOB: [class BLOB extends BLOB],\n      BOOLEAN: [Function],\n      ENUM: [class ENUM extends ENUM],\n      STRING: [class STRING extends STRING],\n      UUID: [class UUID extends UUID],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      NOW: [class NOW extends NOW],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      INTEGER: [class INTEGER extends INTEGER],\n      DOUBLE: [Function],\n      'DOUBLE PRECISION': [Function],\n      BIGINT: [class BIGINT extends BIGINT],\n      REAL: [class REAL extends REAL],\n      FLOAT: [class FLOAT extends FLOAT],\n      TEXT: [class TEXT extends TEXT]\n    },\n    snowflake: {\n      TEXT: [class TEXT extends TEXT],\n      DATE: [class DATE extends DATE],\n      BOOLEAN: [class BOOLEAN extends BOOLEAN],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      UUID: [class UUID extends UUID],\n      JSON: [class JSONTYPE extends JSONTYPE]\n    },\n    oracle: {\n      BOOLEAN: [class BOOLEAN extends BOOLEAN],\n      'DOUBLE PRECISION': [class DOUBLE extends DOUBLE],\n      DOUBLE: [class DOUBLE extends DOUBLE],\n      STRING: [class STRING extends STRING],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      MEDIUMINT: [class MEDIUMINT extends MEDIUMINT],\n      BIGINT: [class BIGINT extends BIGINT],\n      NUMBER: [class NUMBER extends NUMBER],\n      INTEGER: [class INTEGER extends INTEGER],\n      FLOAT: [class FLOAT extends FLOAT],\n      UUID: [class UUID extends UUID],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      DATE: [class DATE extends DATE],\n      NOW: [class NOW extends NOW],\n      BLOB: [class BLOB extends BLOB],\n      ENUM: [class ENUM extends ENUM],\n      TEXT: [class TEXT extends TEXT],\n      CHAR: [class CHAR extends CHAR],\n      JSON: [class JSONTYPE extends JSONTYPE],\n      REAL: [class REAL extends REAL],\n      DECIMAL: [class DECIMAL extends DECIMAL]\n    },\n    Deferrable: {\n      INITIALLY_DEFERRED: [class INITIALLY_DEFERRED extends ABSTRACT],\n      INITIALLY_IMMEDIATE: [class INITIALLY_IMMEDIATE extends ABSTRACT],\n      NOT: [class NOT extends ABSTRACT],\n      SET_DEFERRED: [class SET_DEFERRED extends ABSTRACT],\n      SET_IMMEDIATE: [class SET_IMMEDIATE extends ABSTRACT]\n    },\n    Association: <ref *6> [class Association] {\n      BelongsTo: [Function],\n      HasOne: [class HasOne extends Association],\n      HasMany: [Function],\n      BelongsToMany: [Function],\n      default: [Circular *6],\n      Association: [Circular *6]\n    },\n    useInflection: [Function: useInflection],\n    _setupHooks: [Function: _setupHooks],\n    runHooks: [AsyncFunction: runHooks],\n    addHook: [Function: addHook],\n    removeHook: [Function: removeHook],\n    hasHook: [Function: hasHook],\n    hasHooks: [Function: hasHook],\n    beforeValidate: [Function (anonymous)],\n    afterValidate: [Function (anonymous)],\n    validationFailed: [Function (anonymous)],\n    beforeCreate: [Function (anonymous)],\n    afterCreate: [Function (anonymous)],\n    beforeDestroy: [Function (anonymous)],\n    afterDestroy: [Function (anonymous)],\n    beforeRestore: [Function (anonymous)],\n    afterRestore: [Function (anonymous)],\n    beforeUpdate: [Function (anonymous)],\n    afterUpdate: [Function (anonymous)],\n    beforeSave: [Function (anonymous)],\n    afterSave: [Function (anonymous)],\n    beforeUpsert: [Function (anonymous)],\n    afterUpsert: [Function (anonymous)],\n    beforeBulkCreate: [Function (anonymous)],\n    afterBulkCreate: [Function (anonymous)],\n    beforeBulkDestroy: [Function (anonymous)],\n    afterBulkDestroy: [Function (anonymous)],\n    beforeBulkRestore: [Function (anonymous)],\n    afterBulkRestore: [Function (anonymous)],\n    beforeBulkUpdate: [Function (anonymous)],\n    afterBulkUpdate: [Function (anonymous)],\n    beforeFind: [Function (anonymous)],\n    beforeFindAfterExpandIncludeAll: [Function (anonymous)],\n    beforeFindAfterOptions: [Function (anonymous)],\n    afterFind: [Function (anonymous)],\n    beforeCount: [Function (anonymous)],\n    beforeDefine: [Function (anonymous)],\n    afterDefine: [Function (anonymous)],\n    beforeInit: [Function (anonymous)],\n    afterInit: [Function (anonymous)],\n    beforeAssociate: [Function (anonymous)],\n    afterAssociate: [Function (anonymous)],\n    beforeConnect: [Function (anonymous)],\n    afterConnect: [Function (anonymous)],\n    beforeDisconnect: [Function (anonymous)],\n    afterDisconnect: [Function (anonymous)],\n    beforeSync: [Function (anonymous)],\n    afterSync: [Function (anonymous)],\n    beforeBulkSync: [Function (anonymous)],\n    afterBulkSync: [Function (anonymous)],\n    beforeQuery: [Function (anonymous)],\n    afterQuery: [Function (anonymous)],\n    Error: [class BaseError extends Error],\n    AccessDeniedError: [class AccessDeniedError extends ConnectionError],\n    AggregateError: [class AggregateError extends BaseError],\n    AssociationError: [class AssociationError extends BaseError],\n    AsyncQueueError: [class AsyncQueueError extends BaseError],\n    BaseError: [class BaseError extends Error],\n    BulkRecordError: [class BulkRecordError extends BaseError],\n    ConnectionAcquireTimeoutError: [class ConnectionAcquireTimeoutError extends ConnectionError],\n    ConnectionError: [class ConnectionError extends BaseError],\n    ConnectionRefusedError: [class ConnectionRefusedError extends ConnectionError],\n    ConnectionTimedOutError: [class ConnectionTimedOutError extends ConnectionError],\n    DatabaseError: [class DatabaseError extends BaseError],\n    EagerLoadingError: [class EagerLoadingError extends BaseError],\n    EmptyResultError: [class EmptyResultError extends BaseError],\n    ExclusionConstraintError: [class ExclusionConstraintError extends DatabaseError],\n    ForeignKeyConstraintError: [class ForeignKeyConstraintError extends DatabaseError],\n    HostNotFoundError: [class HostNotFoundError extends ConnectionError],\n    HostNotReachableError: [class HostNotReachableError extends ConnectionError],\n    InstanceError: [class InstanceError extends BaseError],\n    InvalidConnectionError: [class InvalidConnectionError extends ConnectionError],\n    OptimisticLockError: [class OptimisticLockError extends BaseError],\n    QueryError: [class QueryError extends BaseError],\n    SequelizeScopeError: [class SequelizeScopeError extends BaseError],\n    TimeoutError: [class TimeoutError extends DatabaseError],\n    UniqueConstraintError: [class UniqueConstraintError extends ValidationError],\n    UnknownConstraintError: [class UnknownConstraintError extends DatabaseError],\n    ValidationError: [class ValidationError extends BaseError],\n    ValidationErrorItem: [class ValidationErrorItem] {\n      TypeStringMap: [Object],\n      Origins: [Object]\n    },\n    ValidationErrorItemOrigin: { CORE: 'CORE', DB: 'DB', FUNCTION: 'FUNCTION' },\n    ValidationErrorItemType: {\n      'notnull violation': 'CORE',\n      'string violation': 'CORE',\n      'unique violation': 'DB',\n      'validation error': 'FUNCTION'\n    },\n    Sequelize: [Circular *7],\n    default: [Circular *7]\n  },\n  sequelize: <ref *8> Sequelize {\n    options: {\n      dialect: 'mysql',\n      dialectModule: null,\n      dialectModulePath: null,\n      host: 'localhost',\n      protocol: 'tcp',\n      define: {},\n      query: {},\n      sync: {},\n      timezone: '+00:00',\n      standardConformingStrings: true,\n      logging: [Function: log],\n      omitNull: false,\n      native: false,\n      replication: false,\n      ssl: undefined,\n      pool: [Object],\n      quoteIdentifiers: true,\n      hooks: {},\n      retry: [Object],\n      transactionType: 'DEFERRED',\n      isolationLevel: null,\n      databaseVersion: 0,\n      typeValidation: false,\n      benchmark: false,\n      minifyAliases: false,\n      logQueryParameters: false\n    },\n    config: {\n      database: 'tc_db',\n      username: 'root',\n      password: 'Root@123',\n      host: 'localhost',\n      port: 3306,\n      pool: [Object],\n      protocol: 'tcp',\n      native: false,\n      ssl: undefined,\n      replication: false,\n      dialectModule: null,\n      dialectModulePath: null,\n      keepDefaultTimezone: undefined,\n      dialectOptions: undefined\n    },\n    dialect: MysqlDialect {\n      sequelize: [Circular *8],\n      connectionManager: [ConnectionManager],\n      queryGenerator: [MySQLQueryGenerator],\n      queryInterface: [MySQLQueryInterface]\n    },\n    queryInterface: MySQLQueryInterface {\n      sequelize: [Circular *8],\n      queryGenerator: [MySQLQueryGenerator]\n    },\n    models: { tutorial: tutorial },\n    modelManager: ModelManager { models: [Array], sequelize: [Circular *8] },\n    connectionManager: ConnectionManager {\n      sequelize: [Circular *8],\n      config: [Object],\n      dialect: [MysqlDialect],\n      versionPromise: [Promise],\n      dialectName: 'mysql',\n      pool: [Pool],\n      lib: [Object]\n    }\n  },\n  tutorials: tutorial\n}","time":"2022-10-25T17:09:26.913Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22700,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:09:26.967Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22700,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:09:27.031Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":9984,"level":30,"msg":"db database:  {\n  Sequelize: <ref *7> [class Sequelize] {\n    version: [Getter],\n    options: { hooks: {} },\n    Utils: {\n      classToInvokable: [Function: classToInvokable],\n      joinSQLFragments: [Function: joinSQLFragments],\n      useInflection: [Function: useInflection],\n      camelizeIf: [Function: camelizeIf],\n      underscoredIf: [Function: underscoredIf],\n      isPrimitive: [Function: isPrimitive],\n      mergeDefaults: [Function: mergeDefaults],\n      merge: [Function: merge],\n      spliceStr: [Function: spliceStr],\n      camelize: [Function: camelize],\n      underscore: [Function: underscore],\n      singularize: [Function: singularize],\n      pluralize: [Function: pluralize],\n      format: [Function: format],\n      formatNamedParameters: [Function: formatNamedParameters],\n      cloneDeep: [Function: cloneDeep],\n      mapFinderOptions: [Function: mapFinderOptions],\n      mapOptionFieldNames: [Function: mapOptionFieldNames],\n      mapWhereFieldNames: [Function: mapWhereFieldNames],\n      mapValueFieldNames: [Function: mapValueFieldNames],\n      isColString: [Function: isColString],\n      canTreatArrayAsAnd: [Function: canTreatArrayAsAnd],\n      combineTableNames: [Function: combineTableNames],\n      toDefaultValue: [Function: toDefaultValue],\n      defaultValueSchemable: [Function: defaultValueSchemable],\n      removeNullValuesFromHash: [Function: removeNullValuesFromHash],\n      now: [Function: now],\n      TICK_CHAR: '`',\n      addTicks: [Function: addTicks],\n      removeTicks: [Function: removeTicks],\n      flattenObjectDeep: [Function: flattenObjectDeep],\n      SequelizeMethod: [class SequelizeMethod],\n      Fn: [class Fn extends SequelizeMethod],\n      Col: [class Col extends SequelizeMethod],\n      Cast: [class Cast extends SequelizeMethod],\n      Literal: [class Literal extends SequelizeMethod],\n      Json: [class Json extends SequelizeMethod],\n      Where: [class Where extends SequelizeMethod],\n      getOperators: [Function: getOperators],\n      getComplexKeys: [Function: getComplexKeys],\n      getComplexSize: [Function: getComplexSize],\n      isWhereEmpty: [Function: isWhereEmpty],\n      generateEnumName: [Function: generateEnumName],\n      camelizeObjectKeys: [Function: camelizeObjectKeys],\n      defaults: [Function: defaults],\n      nameIndex: [Function: nameIndex],\n      intersects: [Function: intersects],\n      safeStringifyJson: [Function: safeStringifyJson]\n    },\n    Op: {\n      eq: Symbol(eq),\n      ne: Symbol(ne),\n      gte: Symbol(gte),\n      gt: Symbol(gt),\n      lte: Symbol(lte),\n      lt: Symbol(lt),\n      not: Symbol(not),\n      is: Symbol(is),\n      in: Symbol(in),\n      notIn: Symbol(notIn),\n      like: Symbol(like),\n      notLike: Symbol(notLike),\n      iLike: Symbol(iLike),\n      notILike: Symbol(notILike),\n      startsWith: Symbol(startsWith),\n      endsWith: Symbol(endsWith),\n      substring: Symbol(substring),\n      regexp: Symbol(regexp),\n      notRegexp: Symbol(notRegexp),\n      iRegexp: Symbol(iRegexp),\n      notIRegexp: Symbol(notIRegexp),\n      between: Symbol(between),\n      notBetween: Symbol(notBetween),\n      overlap: Symbol(overlap),\n      contains: Symbol(contains),\n      contained: Symbol(contained),\n      adjacent: Symbol(adjacent),\n      strictLeft: Symbol(strictLeft),\n      strictRight: Symbol(strictRight),\n      noExtendRight: Symbol(noExtendRight),\n      noExtendLeft: Symbol(noExtendLeft),\n      and: Symbol(and),\n      or: Symbol(or),\n      any: Symbol(any),\n      all: Symbol(all),\n      values: Symbol(values),\n      col: Symbol(col),\n      placeholder: Symbol(placeholder),\n      join: Symbol(join),\n      match: Symbol(match)\n    },\n    TableHints: {\n      NOLOCK: 'NOLOCK',\n      READUNCOMMITTED: 'READUNCOMMITTED',\n      UPDLOCK: 'UPDLOCK',\n      REPEATABLEREAD: 'REPEATABLEREAD',\n      SERIALIZABLE: 'SERIALIZABLE',\n      READCOMMITTED: 'READCOMMITTED',\n      TABLOCK: 'TABLOCK',\n      TABLOCKX: 'TABLOCKX',\n      PAGLOCK: 'PAGLOCK',\n      ROWLOCK: 'ROWLOCK',\n      NOWAIT: 'NOWAIT',\n      READPAST: 'READPAST',\n      XLOCK: 'XLOCK',\n      SNAPSHOT: 'SNAPSHOT',\n      NOEXPAND: 'NOEXPAND'\n    },\n    IndexHints: { USE: 'USE', FORCE: 'FORCE', IGNORE: 'IGNORE' },\n    Transaction: <ref *1> [class Transaction] {\n      Transaction: [Circular *1],\n      default: [Circular *1]\n    },\n    QueryTypes: {\n      SELECT: 'SELECT',\n      INSERT: 'INSERT',\n      UPDATE: 'UPDATE',\n      BULKUPDATE: 'BULKUPDATE',\n      BULKDELETE: 'BULKDELETE',\n      DELETE: 'DELETE',\n      UPSERT: 'UPSERT',\n      VERSION: 'VERSION',\n      SHOWTABLES: 'SHOWTABLES',\n      SHOWINDEXES: 'SHOWINDEXES',\n      DESCRIBE: 'DESCRIBE',\n      RAW: 'RAW',\n      FOREIGNKEYS: 'FOREIGNKEYS',\n      SHOWCONSTRAINTS: 'SHOWCONSTRAINTS'\n    },\n    Validator: <ref *2> {\n      version: '13.7.0',\n      toDate: [Function],\n      toFloat: [Function],\n      toInt: [Function],\n      toBoolean: [Function],\n      equals: [Function],\n      contains: [Function: contains],\n      matches: [Function],\n      isEmail: [Function],\n      isURL: [Function],\n      isMACAddress: [Function],\n      isIP: [Function],\n      isIPRange: [Function],\n      isFQDN: [Function],\n      isBoolean: [Function],\n      isIBAN: [Function: isIBAN],\n      isBIC: [Function],\n      isAlpha: [Function: isAlpha],\n      isAlphaLocales: [Array],\n      isAlphanumeric: [Function: isAlphanumeric],\n      isAlphanumericLocales: [Array],\n      isNumeric: [Function],\n      isPassportNumber: [Function],\n      isPort: [Function],\n      isLowercase: [Function],\n      isUppercase: [Function],\n      isAscii: [Function],\n      isFullWidth: [Function: isFullWidth],\n      isHalfWidth: [Function: isHalfWidth],\n      isVariableWidth: [Function],\n      isMultibyte: [Function],\n      isSemVer: [Function],\n      isSurrogatePair: [Function],\n      isInt: [Function],\n      isIMEI: [Function],\n      isFloat: [Function: isFloat],\n      isFloatLocales: [Array],\n      isDecimal: [Function: isDecimal],\n      isHexadecimal: [Function],\n      isOctal: [Function],\n      isDivisibleBy: [Function],\n      isHexColor: [Function],\n      isRgbColor: [Function],\n      isHSL: [Function],\n      isISRC: [Function],\n      isMD5: [Function],\n      isHash: [Function],\n      isJWT: [Function],\n      isJSON: [Function],\n      isEmpty: [Function],\n      isLength: [Function],\n      isLocale: [Function],\n      isByteLength: [Function],\n      isUUID: [Function],\n      isMongoId: [Function],\n      isAfter: [Function],\n      isBefore: [Function],\n      isIn: [Function],\n      isCreditCard: [Function],\n      isIdentityCard: [Function],\n      isEAN: [Function],\n      isISIN: [Function],\n      isISBN: [Function],\n      isISSN: [Function],\n      isMobilePhone: [Function: isMobilePhone],\n      isMobilePhoneLocales: [Array],\n      isPostalCode: [Function: isPostalCode],\n      isPostalCodeLocales: [Array],\n      isEthereumAddress: [Function],\n      isCurrency: [Function],\n      isBtcAddress: [Function],\n      isISO8601: [Function],\n      isRFC3339: [Function],\n      isISO31661Alpha2: [Function: isISO31661Alpha2],\n      isISO31661Alpha3: [Function],\n      isISO4217: [Function: isISO4217],\n      isBase32: [Function],\n      isBase58: [Function],\n      isBase64: [Function],\n      isDataURI: [Function],\n      isMagnetURI: [Function],\n      isMimeType: [Function],\n      isLatLong: [Function],\n      ltrim: [Function],\n      rtrim: [Function],\n      trim: [Function],\n      escape: [Function],\n      unescape: [Function],\n      stripLow: [Function],\n      whitelist: [Function],\n      blacklist: [Function],\n      isWhitelisted: [Function],\n      normalizeEmail: [Function],\n      toString: [Function: toString],\n      isSlug: [Function],\n      isStrongPassword: [Function],\n      isTaxID: [Function],\n      isDate: [Function (anonymous)],\n      isLicensePlate: [Function],\n      isVAT: [Function: isVAT],\n      ibanLocales: [Array],\n      default: [Circular *2],\n      isImmutable: [Function (anonymous)],\n      notNull: [Function (anonymous)],\n      extend: [Function: extend],\n      notEmpty: [Function: notEmpty],\n      len: [Function: len],\n      isUrl: [Function: isUrl],\n      isIPv6: [Function: isIPv6],\n      isIPv4: [Function: isIPv4],\n      notIn: [Function: notIn],\n      regex: [Function: regex],\n      notRegex: [Function: notRegex],\n      min: [Function: min],\n      max: [Function: max],\n      not: [Function: not],\n      notContains: [Function: notContains],\n      is: [Function: is],\n      isNull: [Function]\n    },\n    Model: Model,\n    QueryInterface: [class QueryInterface],\n    BelongsTo: <ref *3> [class BelongsTo extends Association] {\n      BelongsTo: [Circular *3],\n      default: [Circular *3]\n    },\n    HasOne: [class HasOne extends Association],\n    HasMany: <ref *4> [class HasMany extends Association] {\n      HasMany: [Circular *4],\n      default: [Circular *4]\n    },\n    BelongsToMany: <ref *5> [class BelongsToMany extends Association] {\n      BelongsToMany: [Circular *5],\n      default: [Circular *5]\n    },\n    DataTypes: {\n      ABSTRACT: [Function],\n      STRING: [Function],\n      CHAR: [Function],\n      TEXT: [Function],\n      NUMBER: [Function],\n      TINYINT: [Function],\n      SMALLINT: [Function],\n      MEDIUMINT: [Function],\n      INTEGER: [Function],\n      BIGINT: [Function],\n      FLOAT: [Function],\n      TIME: [Function],\n      DATE: [Function],\n      DATEONLY: [Function],\n      BOOLEAN: [Function],\n      NOW: [Function],\n      BLOB: [Function],\n      DECIMAL: [Function],\n      NUMERIC: [Function],\n      UUID: [Function],\n      UUIDV1: [Function],\n      UUIDV4: [Function],\n      HSTORE: [Function],\n      JSON: [Function],\n      JSONB: [Function],\n      VIRTUAL: [Function],\n      ARRAY: [Function],\n      ENUM: [Function],\n      RANGE: [Function],\n      REAL: [Function],\n      'DOUBLE PRECISION': [Function],\n      DOUBLE: [Function],\n      GEOMETRY: [Function],\n      GEOGRAPHY: [Function],\n      CIDR: [Function],\n      INET: [Function],\n      MACADDR: [Function],\n      CITEXT: [Function],\n      TSVECTOR: [Function],\n      postgres: [Object],\n      mysql: [Object],\n      mariadb: [Object],\n      sqlite: [Object],\n      mssql: [Object],\n      db2: [Object],\n      snowflake: [Object],\n      oracle: [Object]\n    },\n    ABSTRACT: [class ABSTRACT] { types: {}, key: 'ABSTRACT' },\n    STRING: [class STRING extends ABSTRACT] { types: [Object], key: 'STRING' },\n    CHAR: [class CHAR extends STRING] { types: [Object], key: 'CHAR' },\n    TEXT: [class TEXT extends ABSTRACT] { types: [Object], key: 'TEXT' },\n    NUMBER: [class NUMBER extends ABSTRACT] { types: {}, key: 'NUMBER' },\n    TINYINT: [class TINYINT extends INTEGER] { types: [Object], key: 'TINYINT' },\n    SMALLINT: [class SMALLINT extends INTEGER] {\n      types: [Object],\n      key: 'SMALLINT'\n    },\n    MEDIUMINT: [class MEDIUMINT extends INTEGER] {\n      types: [Object],\n      key: 'MEDIUMINT'\n    },\n    INTEGER: [class INTEGER extends NUMBER] { types: [Object], key: 'INTEGER' },\n    BIGINT: [class BIGINT extends INTEGER] { types: [Object], key: 'BIGINT' },\n    FLOAT: [class FLOAT extends NUMBER] { types: [Object], key: 'FLOAT' },\n    TIME: [class TIME extends ABSTRACT] { types: [Object], key: 'TIME' },\n    DATE: [class DATE extends ABSTRACT] { types: [Object], key: 'DATE' },\n    DATEONLY: [class DATEONLY extends ABSTRACT] {\n      types: [Object],\n      key: 'DATEONLY'\n    },\n    BOOLEAN: [class BOOLEAN extends ABSTRACT] {\n      parse: [Function: _sanitize],\n      types: [Object],\n      key: 'BOOLEAN'\n    },\n    NOW: [class NOW extends ABSTRACT] { types: {}, key: 'NOW' },\n    BLOB: [class BLOB extends ABSTRACT] { types: [Object], key: 'BLOB' },\n    DECIMAL: [class DECIMAL extends NUMBER] { types: [Object], key: 'DECIMAL' },\n    NUMERIC: [class DECIMAL extends NUMBER] { types: [Object], key: 'DECIMAL' },\n    UUID: [class UUID extends ABSTRACT] { types: [Object], key: 'UUID' },\n    UUIDV1: [class UUIDV1 extends ABSTRACT] { types: {}, key: 'UUIDV1' },\n    UUIDV4: [class UUIDV4 extends ABSTRACT] { types: {}, key: 'UUIDV4' },\n    HSTORE: [class HSTORE extends ABSTRACT] { types: [Object], key: 'HSTORE' },\n    JSON: [class JSONTYPE extends ABSTRACT] { types: [Object], key: 'JSON' },\n    JSONB: [class JSONB extends JSONTYPE] { types: [Object], key: 'JSONB' },\n    VIRTUAL: [class VIRTUAL extends ABSTRACT] { types: {}, key: 'VIRTUAL' },\n    ARRAY: [class ARRAY extends ABSTRACT] { types: {}, key: 'ARRAY' },\n    ENUM: [class ENUM extends ABSTRACT] { types: [Object], key: 'ENUM' },\n    RANGE: [class RANGE extends ABSTRACT] { types: [Object], key: 'RANGE' },\n    REAL: [class REAL extends NUMBER] { types: [Object], key: 'REAL' },\n    'DOUBLE PRECISION': [class DOUBLE extends NUMBER] {\n      types: [Object],\n      key: 'DOUBLE PRECISION'\n    },\n    DOUBLE: [class DOUBLE extends NUMBER] {\n      types: [Object],\n      key: 'DOUBLE PRECISION'\n    },\n    GEOMETRY: [class GEOMETRY extends ABSTRACT] {\n      types: [Object],\n      key: 'GEOMETRY'\n    },\n    GEOGRAPHY: [class GEOGRAPHY extends ABSTRACT] {\n      types: [Object],\n      key: 'GEOGRAPHY'\n    },\n    CIDR: [class CIDR extends ABSTRACT] { types: [Object], key: 'CIDR' },\n    INET: [class INET extends ABSTRACT] { types: [Object], key: 'INET' },\n    MACADDR: [class MACADDR extends ABSTRACT] { types: [Object], key: 'MACADDR' },\n    CITEXT: [class CITEXT extends ABSTRACT] { types: [Object], key: 'CITEXT' },\n    TSVECTOR: [class TSVECTOR extends ABSTRACT] {\n      types: [Object],\n      key: 'TSVECTOR'\n    },\n    postgres: {\n      DECIMAL: [class DECIMAL extends DECIMAL],\n      BLOB: [class BLOB extends BLOB],\n      STRING: [class STRING extends STRING],\n      CHAR: [class CHAR extends CHAR],\n      TEXT: [class TEXT extends TEXT],\n      CITEXT: [class CITEXT extends CITEXT],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      INTEGER: [Function],\n      BIGINT: [class BIGINT extends BIGINT],\n      BOOLEAN: [Function],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      REAL: [class REAL extends REAL],\n      'DOUBLE PRECISION': [class DOUBLE extends DOUBLE],\n      FLOAT: [class FLOAT extends FLOAT],\n      GEOMETRY: [class GEOMETRY extends GEOMETRY],\n      GEOGRAPHY: [class GEOGRAPHY extends GEOGRAPHY],\n      HSTORE: [class HSTORE extends HSTORE],\n      RANGE: [class RANGE extends RANGE],\n      ENUM: [class ENUM extends ENUM]\n    },\n    mysql: {\n      ENUM: [class ENUM extends ENUM],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      UUID: [class UUID extends UUID],\n      GEOMETRY: [class GEOMETRY extends GEOMETRY],\n      DECIMAL: [class DECIMAL extends DECIMAL],\n      JSON: [class JSONTYPE extends JSONTYPE]\n    },\n    mariadb: {\n      ENUM: [class ENUM extends ENUM],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      UUID: [class UUID extends UUID],\n      GEOMETRY: [class GEOMETRY extends GEOMETRY],\n      DECIMAL: [class DECIMAL extends DECIMAL],\n      JSON: [class JSONTYPE extends JSONTYPE]\n    },\n    sqlite: {\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      STRING: [class STRING extends STRING],\n      CHAR: [class CHAR extends CHAR],\n      NUMBER: [class NUMBER extends NUMBER],\n      FLOAT: [Function],\n      REAL: [Function],\n      'DOUBLE PRECISION': [Function],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      MEDIUMINT: [class MEDIUMINT extends MEDIUMINT],\n      INTEGER: [class INTEGER extends INTEGER],\n      BIGINT: [class BIGINT extends BIGINT],\n      TEXT: [class TEXT extends TEXT],\n      ENUM: [class ENUM extends ENUM],\n      JSON: [class JSONTYPE extends JSONTYPE],\n      CITEXT: [class CITEXT extends CITEXT]\n    },\n    mssql: {\n      BLOB: [class BLOB extends BLOB],\n      BOOLEAN: [class BOOLEAN extends BOOLEAN],\n      ENUM: [class ENUM extends ENUM],\n      STRING: [class STRING extends STRING],\n      UUID: [class UUID extends UUID],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      NOW: [class NOW extends NOW],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      INTEGER: [class INTEGER extends INTEGER],\n      BIGINT: [class BIGINT extends BIGINT],\n      REAL: [class REAL extends REAL],\n      FLOAT: [class FLOAT extends FLOAT],\n      TEXT: [class TEXT extends TEXT]\n    },\n    db2: {\n      BLOB: [class BLOB extends BLOB],\n      BOOLEAN: [Function],\n      ENUM: [class ENUM extends ENUM],\n      STRING: [class STRING extends STRING],\n      UUID: [class UUID extends UUID],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      NOW: [class NOW extends NOW],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      INTEGER: [class INTEGER extends INTEGER],\n      DOUBLE: [Function],\n      'DOUBLE PRECISION': [Function],\n      BIGINT: [class BIGINT extends BIGINT],\n      REAL: [class REAL extends REAL],\n      FLOAT: [class FLOAT extends FLOAT],\n      TEXT: [class TEXT extends TEXT]\n    },\n    snowflake: {\n      TEXT: [class TEXT extends TEXT],\n      DATE: [class DATE extends DATE],\n      BOOLEAN: [class BOOLEAN extends BOOLEAN],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      UUID: [class UUID extends UUID],\n      JSON: [class JSONTYPE extends JSONTYPE]\n    },\n    oracle: {\n      BOOLEAN: [class BOOLEAN extends BOOLEAN],\n      'DOUBLE PRECISION': [class DOUBLE extends DOUBLE],\n      DOUBLE: [class DOUBLE extends DOUBLE],\n      STRING: [class STRING extends STRING],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      MEDIUMINT: [class MEDIUMINT extends MEDIUMINT],\n      BIGINT: [class BIGINT extends BIGINT],\n      NUMBER: [class NUMBER extends NUMBER],\n      INTEGER: [class INTEGER extends INTEGER],\n      FLOAT: [class FLOAT extends FLOAT],\n      UUID: [class UUID extends UUID],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      DATE: [class DATE extends DATE],\n      NOW: [class NOW extends NOW],\n      BLOB: [class BLOB extends BLOB],\n      ENUM: [class ENUM extends ENUM],\n      TEXT: [class TEXT extends TEXT],\n      CHAR: [class CHAR extends CHAR],\n      JSON: [class JSONTYPE extends JSONTYPE],\n      REAL: [class REAL extends REAL],\n      DECIMAL: [class DECIMAL extends DECIMAL]\n    },\n    Deferrable: {\n      INITIALLY_DEFERRED: [class INITIALLY_DEFERRED extends ABSTRACT],\n      INITIALLY_IMMEDIATE: [class INITIALLY_IMMEDIATE extends ABSTRACT],\n      NOT: [class NOT extends ABSTRACT],\n      SET_DEFERRED: [class SET_DEFERRED extends ABSTRACT],\n      SET_IMMEDIATE: [class SET_IMMEDIATE extends ABSTRACT]\n    },\n    Association: <ref *6> [class Association] {\n      BelongsTo: [Function],\n      HasOne: [class HasOne extends Association],\n      HasMany: [Function],\n      BelongsToMany: [Function],\n      default: [Circular *6],\n      Association: [Circular *6]\n    },\n    useInflection: [Function: useInflection],\n    _setupHooks: [Function: _setupHooks],\n    runHooks: [AsyncFunction: runHooks],\n    addHook: [Function: addHook],\n    removeHook: [Function: removeHook],\n    hasHook: [Function: hasHook],\n    hasHooks: [Function: hasHook],\n    beforeValidate: [Function (anonymous)],\n    afterValidate: [Function (anonymous)],\n    validationFailed: [Function (anonymous)],\n    beforeCreate: [Function (anonymous)],\n    afterCreate: [Function (anonymous)],\n    beforeDestroy: [Function (anonymous)],\n    afterDestroy: [Function (anonymous)],\n    beforeRestore: [Function (anonymous)],\n    afterRestore: [Function (anonymous)],\n    beforeUpdate: [Function (anonymous)],\n    afterUpdate: [Function (anonymous)],\n    beforeSave: [Function (anonymous)],\n    afterSave: [Function (anonymous)],\n    beforeUpsert: [Function (anonymous)],\n    afterUpsert: [Function (anonymous)],\n    beforeBulkCreate: [Function (anonymous)],\n    afterBulkCreate: [Function (anonymous)],\n    beforeBulkDestroy: [Function (anonymous)],\n    afterBulkDestroy: [Function (anonymous)],\n    beforeBulkRestore: [Function (anonymous)],\n    afterBulkRestore: [Function (anonymous)],\n    beforeBulkUpdate: [Function (anonymous)],\n    afterBulkUpdate: [Function (anonymous)],\n    beforeFind: [Function (anonymous)],\n    beforeFindAfterExpandIncludeAll: [Function (anonymous)],\n    beforeFindAfterOptions: [Function (anonymous)],\n    afterFind: [Function (anonymous)],\n    beforeCount: [Function (anonymous)],\n    beforeDefine: [Function (anonymous)],\n    afterDefine: [Function (anonymous)],\n    beforeInit: [Function (anonymous)],\n    afterInit: [Function (anonymous)],\n    beforeAssociate: [Function (anonymous)],\n    afterAssociate: [Function (anonymous)],\n    beforeConnect: [Function (anonymous)],\n    afterConnect: [Function (anonymous)],\n    beforeDisconnect: [Function (anonymous)],\n    afterDisconnect: [Function (anonymous)],\n    beforeSync: [Function (anonymous)],\n    afterSync: [Function (anonymous)],\n    beforeBulkSync: [Function (anonymous)],\n    afterBulkSync: [Function (anonymous)],\n    beforeQuery: [Function (anonymous)],\n    afterQuery: [Function (anonymous)],\n    Error: [class BaseError extends Error],\n    AccessDeniedError: [class AccessDeniedError extends ConnectionError],\n    AggregateError: [class AggregateError extends BaseError],\n    AssociationError: [class AssociationError extends BaseError],\n    AsyncQueueError: [class AsyncQueueError extends BaseError],\n    BaseError: [class BaseError extends Error],\n    BulkRecordError: [class BulkRecordError extends BaseError],\n    ConnectionAcquireTimeoutError: [class ConnectionAcquireTimeoutError extends ConnectionError],\n    ConnectionError: [class ConnectionError extends BaseError],\n    ConnectionRefusedError: [class ConnectionRefusedError extends ConnectionError],\n    ConnectionTimedOutError: [class ConnectionTimedOutError extends ConnectionError],\n    DatabaseError: [class DatabaseError extends BaseError],\n    EagerLoadingError: [class EagerLoadingError extends BaseError],\n    EmptyResultError: [class EmptyResultError extends BaseError],\n    ExclusionConstraintError: [class ExclusionConstraintError extends DatabaseError],\n    ForeignKeyConstraintError: [class ForeignKeyConstraintError extends DatabaseError],\n    HostNotFoundError: [class HostNotFoundError extends ConnectionError],\n    HostNotReachableError: [class HostNotReachableError extends ConnectionError],\n    InstanceError: [class InstanceError extends BaseError],\n    InvalidConnectionError: [class InvalidConnectionError extends ConnectionError],\n    OptimisticLockError: [class OptimisticLockError extends BaseError],\n    QueryError: [class QueryError extends BaseError],\n    SequelizeScopeError: [class SequelizeScopeError extends BaseError],\n    TimeoutError: [class TimeoutError extends DatabaseError],\n    UniqueConstraintError: [class UniqueConstraintError extends ValidationError],\n    UnknownConstraintError: [class UnknownConstraintError extends DatabaseError],\n    ValidationError: [class ValidationError extends BaseError],\n    ValidationErrorItem: [class ValidationErrorItem] {\n      TypeStringMap: [Object],\n      Origins: [Object]\n    },\n    ValidationErrorItemOrigin: { CORE: 'CORE', DB: 'DB', FUNCTION: 'FUNCTION' },\n    ValidationErrorItemType: {\n      'notnull violation': 'CORE',\n      'string violation': 'CORE',\n      'unique violation': 'DB',\n      'validation error': 'FUNCTION'\n    },\n    Sequelize: [Circular *7],\n    default: [Circular *7]\n  },\n  sequelize: <ref *8> Sequelize {\n    options: {\n      dialect: 'mysql',\n      dialectModule: null,\n      dialectModulePath: null,\n      host: 'localhost',\n      protocol: 'tcp',\n      define: {},\n      query: {},\n      sync: {},\n      timezone: '+00:00',\n      standardConformingStrings: true,\n      logging: [Function: log],\n      omitNull: false,\n      native: false,\n      replication: false,\n      ssl: undefined,\n      pool: [Object],\n      quoteIdentifiers: true,\n      hooks: {},\n      retry: [Object],\n      transactionType: 'DEFERRED',\n      isolationLevel: null,\n      databaseVersion: 0,\n      typeValidation: false,\n      benchmark: false,\n      minifyAliases: false,\n      logQueryParameters: false\n    },\n    config: {\n      database: 'tc_db',\n      username: 'root',\n      password: 'Root@123',\n      host: 'localhost',\n      port: 3306,\n      pool: [Object],\n      protocol: 'tcp',\n      native: false,\n      ssl: undefined,\n      replication: false,\n      dialectModule: null,\n      dialectModulePath: null,\n      keepDefaultTimezone: undefined,\n      dialectOptions: undefined\n    },\n    dialect: MysqlDialect {\n      sequelize: [Circular *8],\n      connectionManager: [ConnectionManager],\n      queryGenerator: [MySQLQueryGenerator],\n      queryInterface: [MySQLQueryInterface]\n    },\n    queryInterface: MySQLQueryInterface {\n      sequelize: [Circular *8],\n      queryGenerator: [MySQLQueryGenerator]\n    },\n    models: { tutorial: tutorial },\n    modelManager: ModelManager { models: [Array], sequelize: [Circular *8] },\n    connectionManager: ConnectionManager {\n      sequelize: [Circular *8],\n      config: [Object],\n      dialect: [MysqlDialect],\n      versionPromise: [Promise],\n      dialectName: 'mysql',\n      pool: [Pool],\n      lib: [Object]\n    }\n  },\n  tutorials: tutorial\n}","time":"2022-10-25T17:10:48.227Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":9984,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:10:48.268Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":9984,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:10:48.338Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23380,"level":30,"msg":"db database:  {\n  Sequelize: <ref *7> [class Sequelize] {\n    version: [Getter],\n    options: { hooks: {} },\n    Utils: {\n      classToInvokable: [Function: classToInvokable],\n      joinSQLFragments: [Function: joinSQLFragments],\n      useInflection: [Function: useInflection],\n      camelizeIf: [Function: camelizeIf],\n      underscoredIf: [Function: underscoredIf],\n      isPrimitive: [Function: isPrimitive],\n      mergeDefaults: [Function: mergeDefaults],\n      merge: [Function: merge],\n      spliceStr: [Function: spliceStr],\n      camelize: [Function: camelize],\n      underscore: [Function: underscore],\n      singularize: [Function: singularize],\n      pluralize: [Function: pluralize],\n      format: [Function: format],\n      formatNamedParameters: [Function: formatNamedParameters],\n      cloneDeep: [Function: cloneDeep],\n      mapFinderOptions: [Function: mapFinderOptions],\n      mapOptionFieldNames: [Function: mapOptionFieldNames],\n      mapWhereFieldNames: [Function: mapWhereFieldNames],\n      mapValueFieldNames: [Function: mapValueFieldNames],\n      isColString: [Function: isColString],\n      canTreatArrayAsAnd: [Function: canTreatArrayAsAnd],\n      combineTableNames: [Function: combineTableNames],\n      toDefaultValue: [Function: toDefaultValue],\n      defaultValueSchemable: [Function: defaultValueSchemable],\n      removeNullValuesFromHash: [Function: removeNullValuesFromHash],\n      now: [Function: now],\n      TICK_CHAR: '`',\n      addTicks: [Function: addTicks],\n      removeTicks: [Function: removeTicks],\n      flattenObjectDeep: [Function: flattenObjectDeep],\n      SequelizeMethod: [class SequelizeMethod],\n      Fn: [class Fn extends SequelizeMethod],\n      Col: [class Col extends SequelizeMethod],\n      Cast: [class Cast extends SequelizeMethod],\n      Literal: [class Literal extends SequelizeMethod],\n      Json: [class Json extends SequelizeMethod],\n      Where: [class Where extends SequelizeMethod],\n      getOperators: [Function: getOperators],\n      getComplexKeys: [Function: getComplexKeys],\n      getComplexSize: [Function: getComplexSize],\n      isWhereEmpty: [Function: isWhereEmpty],\n      generateEnumName: [Function: generateEnumName],\n      camelizeObjectKeys: [Function: camelizeObjectKeys],\n      defaults: [Function: defaults],\n      nameIndex: [Function: nameIndex],\n      intersects: [Function: intersects],\n      safeStringifyJson: [Function: safeStringifyJson]\n    },\n    Op: {\n      eq: Symbol(eq),\n      ne: Symbol(ne),\n      gte: Symbol(gte),\n      gt: Symbol(gt),\n      lte: Symbol(lte),\n      lt: Symbol(lt),\n      not: Symbol(not),\n      is: Symbol(is),\n      in: Symbol(in),\n      notIn: Symbol(notIn),\n      like: Symbol(like),\n      notLike: Symbol(notLike),\n      iLike: Symbol(iLike),\n      notILike: Symbol(notILike),\n      startsWith: Symbol(startsWith),\n      endsWith: Symbol(endsWith),\n      substring: Symbol(substring),\n      regexp: Symbol(regexp),\n      notRegexp: Symbol(notRegexp),\n      iRegexp: Symbol(iRegexp),\n      notIRegexp: Symbol(notIRegexp),\n      between: Symbol(between),\n      notBetween: Symbol(notBetween),\n      overlap: Symbol(overlap),\n      contains: Symbol(contains),\n      contained: Symbol(contained),\n      adjacent: Symbol(adjacent),\n      strictLeft: Symbol(strictLeft),\n      strictRight: Symbol(strictRight),\n      noExtendRight: Symbol(noExtendRight),\n      noExtendLeft: Symbol(noExtendLeft),\n      and: Symbol(and),\n      or: Symbol(or),\n      any: Symbol(any),\n      all: Symbol(all),\n      values: Symbol(values),\n      col: Symbol(col),\n      placeholder: Symbol(placeholder),\n      join: Symbol(join),\n      match: Symbol(match)\n    },\n    TableHints: {\n      NOLOCK: 'NOLOCK',\n      READUNCOMMITTED: 'READUNCOMMITTED',\n      UPDLOCK: 'UPDLOCK',\n      REPEATABLEREAD: 'REPEATABLEREAD',\n      SERIALIZABLE: 'SERIALIZABLE',\n      READCOMMITTED: 'READCOMMITTED',\n      TABLOCK: 'TABLOCK',\n      TABLOCKX: 'TABLOCKX',\n      PAGLOCK: 'PAGLOCK',\n      ROWLOCK: 'ROWLOCK',\n      NOWAIT: 'NOWAIT',\n      READPAST: 'READPAST',\n      XLOCK: 'XLOCK',\n      SNAPSHOT: 'SNAPSHOT',\n      NOEXPAND: 'NOEXPAND'\n    },\n    IndexHints: { USE: 'USE', FORCE: 'FORCE', IGNORE: 'IGNORE' },\n    Transaction: <ref *1> [class Transaction] {\n      Transaction: [Circular *1],\n      default: [Circular *1]\n    },\n    QueryTypes: {\n      SELECT: 'SELECT',\n      INSERT: 'INSERT',\n      UPDATE: 'UPDATE',\n      BULKUPDATE: 'BULKUPDATE',\n      BULKDELETE: 'BULKDELETE',\n      DELETE: 'DELETE',\n      UPSERT: 'UPSERT',\n      VERSION: 'VERSION',\n      SHOWTABLES: 'SHOWTABLES',\n      SHOWINDEXES: 'SHOWINDEXES',\n      DESCRIBE: 'DESCRIBE',\n      RAW: 'RAW',\n      FOREIGNKEYS: 'FOREIGNKEYS',\n      SHOWCONSTRAINTS: 'SHOWCONSTRAINTS'\n    },\n    Validator: <ref *2> {\n      version: '13.7.0',\n      toDate: [Function],\n      toFloat: [Function],\n      toInt: [Function],\n      toBoolean: [Function],\n      equals: [Function],\n      contains: [Function: contains],\n      matches: [Function],\n      isEmail: [Function],\n      isURL: [Function],\n      isMACAddress: [Function],\n      isIP: [Function],\n      isIPRange: [Function],\n      isFQDN: [Function],\n      isBoolean: [Function],\n      isIBAN: [Function: isIBAN],\n      isBIC: [Function],\n      isAlpha: [Function: isAlpha],\n      isAlphaLocales: [Array],\n      isAlphanumeric: [Function: isAlphanumeric],\n      isAlphanumericLocales: [Array],\n      isNumeric: [Function],\n      isPassportNumber: [Function],\n      isPort: [Function],\n      isLowercase: [Function],\n      isUppercase: [Function],\n      isAscii: [Function],\n      isFullWidth: [Function: isFullWidth],\n      isHalfWidth: [Function: isHalfWidth],\n      isVariableWidth: [Function],\n      isMultibyte: [Function],\n      isSemVer: [Function],\n      isSurrogatePair: [Function],\n      isInt: [Function],\n      isIMEI: [Function],\n      isFloat: [Function: isFloat],\n      isFloatLocales: [Array],\n      isDecimal: [Function: isDecimal],\n      isHexadecimal: [Function],\n      isOctal: [Function],\n      isDivisibleBy: [Function],\n      isHexColor: [Function],\n      isRgbColor: [Function],\n      isHSL: [Function],\n      isISRC: [Function],\n      isMD5: [Function],\n      isHash: [Function],\n      isJWT: [Function],\n      isJSON: [Function],\n      isEmpty: [Function],\n      isLength: [Function],\n      isLocale: [Function],\n      isByteLength: [Function],\n      isUUID: [Function],\n      isMongoId: [Function],\n      isAfter: [Function],\n      isBefore: [Function],\n      isIn: [Function],\n      isCreditCard: [Function],\n      isIdentityCard: [Function],\n      isEAN: [Function],\n      isISIN: [Function],\n      isISBN: [Function],\n      isISSN: [Function],\n      isMobilePhone: [Function: isMobilePhone],\n      isMobilePhoneLocales: [Array],\n      isPostalCode: [Function: isPostalCode],\n      isPostalCodeLocales: [Array],\n      isEthereumAddress: [Function],\n      isCurrency: [Function],\n      isBtcAddress: [Function],\n      isISO8601: [Function],\n      isRFC3339: [Function],\n      isISO31661Alpha2: [Function: isISO31661Alpha2],\n      isISO31661Alpha3: [Function],\n      isISO4217: [Function: isISO4217],\n      isBase32: [Function],\n      isBase58: [Function],\n      isBase64: [Function],\n      isDataURI: [Function],\n      isMagnetURI: [Function],\n      isMimeType: [Function],\n      isLatLong: [Function],\n      ltrim: [Function],\n      rtrim: [Function],\n      trim: [Function],\n      escape: [Function],\n      unescape: [Function],\n      stripLow: [Function],\n      whitelist: [Function],\n      blacklist: [Function],\n      isWhitelisted: [Function],\n      normalizeEmail: [Function],\n      toString: [Function: toString],\n      isSlug: [Function],\n      isStrongPassword: [Function],\n      isTaxID: [Function],\n      isDate: [Function (anonymous)],\n      isLicensePlate: [Function],\n      isVAT: [Function: isVAT],\n      ibanLocales: [Array],\n      default: [Circular *2],\n      isImmutable: [Function (anonymous)],\n      notNull: [Function (anonymous)],\n      extend: [Function: extend],\n      notEmpty: [Function: notEmpty],\n      len: [Function: len],\n      isUrl: [Function: isUrl],\n      isIPv6: [Function: isIPv6],\n      isIPv4: [Function: isIPv4],\n      notIn: [Function: notIn],\n      regex: [Function: regex],\n      notRegex: [Function: notRegex],\n      min: [Function: min],\n      max: [Function: max],\n      not: [Function: not],\n      notContains: [Function: notContains],\n      is: [Function: is],\n      isNull: [Function]\n    },\n    Model: Model,\n    QueryInterface: [class QueryInterface],\n    BelongsTo: <ref *3> [class BelongsTo extends Association] {\n      BelongsTo: [Circular *3],\n      default: [Circular *3]\n    },\n    HasOne: [class HasOne extends Association],\n    HasMany: <ref *4> [class HasMany extends Association] {\n      HasMany: [Circular *4],\n      default: [Circular *4]\n    },\n    BelongsToMany: <ref *5> [class BelongsToMany extends Association] {\n      BelongsToMany: [Circular *5],\n      default: [Circular *5]\n    },\n    DataTypes: {\n      ABSTRACT: [Function],\n      STRING: [Function],\n      CHAR: [Function],\n      TEXT: [Function],\n      NUMBER: [Function],\n      TINYINT: [Function],\n      SMALLINT: [Function],\n      MEDIUMINT: [Function],\n      INTEGER: [Function],\n      BIGINT: [Function],\n      FLOAT: [Function],\n      TIME: [Function],\n      DATE: [Function],\n      DATEONLY: [Function],\n      BOOLEAN: [Function],\n      NOW: [Function],\n      BLOB: [Function],\n      DECIMAL: [Function],\n      NUMERIC: [Function],\n      UUID: [Function],\n      UUIDV1: [Function],\n      UUIDV4: [Function],\n      HSTORE: [Function],\n      JSON: [Function],\n      JSONB: [Function],\n      VIRTUAL: [Function],\n      ARRAY: [Function],\n      ENUM: [Function],\n      RANGE: [Function],\n      REAL: [Function],\n      'DOUBLE PRECISION': [Function],\n      DOUBLE: [Function],\n      GEOMETRY: [Function],\n      GEOGRAPHY: [Function],\n      CIDR: [Function],\n      INET: [Function],\n      MACADDR: [Function],\n      CITEXT: [Function],\n      TSVECTOR: [Function],\n      postgres: [Object],\n      mysql: [Object],\n      mariadb: [Object],\n      sqlite: [Object],\n      mssql: [Object],\n      db2: [Object],\n      snowflake: [Object],\n      oracle: [Object]\n    },\n    ABSTRACT: [class ABSTRACT] { types: {}, key: 'ABSTRACT' },\n    STRING: [class STRING extends ABSTRACT] { types: [Object], key: 'STRING' },\n    CHAR: [class CHAR extends STRING] { types: [Object], key: 'CHAR' },\n    TEXT: [class TEXT extends ABSTRACT] { types: [Object], key: 'TEXT' },\n    NUMBER: [class NUMBER extends ABSTRACT] { types: {}, key: 'NUMBER' },\n    TINYINT: [class TINYINT extends INTEGER] { types: [Object], key: 'TINYINT' },\n    SMALLINT: [class SMALLINT extends INTEGER] {\n      types: [Object],\n      key: 'SMALLINT'\n    },\n    MEDIUMINT: [class MEDIUMINT extends INTEGER] {\n      types: [Object],\n      key: 'MEDIUMINT'\n    },\n    INTEGER: [class INTEGER extends NUMBER] { types: [Object], key: 'INTEGER' },\n    BIGINT: [class BIGINT extends INTEGER] { types: [Object], key: 'BIGINT' },\n    FLOAT: [class FLOAT extends NUMBER] { types: [Object], key: 'FLOAT' },\n    TIME: [class TIME extends ABSTRACT] { types: [Object], key: 'TIME' },\n    DATE: [class DATE extends ABSTRACT] { types: [Object], key: 'DATE' },\n    DATEONLY: [class DATEONLY extends ABSTRACT] {\n      types: [Object],\n      key: 'DATEONLY'\n    },\n    BOOLEAN: [class BOOLEAN extends ABSTRACT] {\n      parse: [Function: _sanitize],\n      types: [Object],\n      key: 'BOOLEAN'\n    },\n    NOW: [class NOW extends ABSTRACT] { types: {}, key: 'NOW' },\n    BLOB: [class BLOB extends ABSTRACT] { types: [Object], key: 'BLOB' },\n    DECIMAL: [class DECIMAL extends NUMBER] { types: [Object], key: 'DECIMAL' },\n    NUMERIC: [class DECIMAL extends NUMBER] { types: [Object], key: 'DECIMAL' },\n    UUID: [class UUID extends ABSTRACT] { types: [Object], key: 'UUID' },\n    UUIDV1: [class UUIDV1 extends ABSTRACT] { types: {}, key: 'UUIDV1' },\n    UUIDV4: [class UUIDV4 extends ABSTRACT] { types: {}, key: 'UUIDV4' },\n    HSTORE: [class HSTORE extends ABSTRACT] { types: [Object], key: 'HSTORE' },\n    JSON: [class JSONTYPE extends ABSTRACT] { types: [Object], key: 'JSON' },\n    JSONB: [class JSONB extends JSONTYPE] { types: [Object], key: 'JSONB' },\n    VIRTUAL: [class VIRTUAL extends ABSTRACT] { types: {}, key: 'VIRTUAL' },\n    ARRAY: [class ARRAY extends ABSTRACT] { types: {}, key: 'ARRAY' },\n    ENUM: [class ENUM extends ABSTRACT] { types: [Object], key: 'ENUM' },\n    RANGE: [class RANGE extends ABSTRACT] { types: [Object], key: 'RANGE' },\n    REAL: [class REAL extends NUMBER] { types: [Object], key: 'REAL' },\n    'DOUBLE PRECISION': [class DOUBLE extends NUMBER] {\n      types: [Object],\n      key: 'DOUBLE PRECISION'\n    },\n    DOUBLE: [class DOUBLE extends NUMBER] {\n      types: [Object],\n      key: 'DOUBLE PRECISION'\n    },\n    GEOMETRY: [class GEOMETRY extends ABSTRACT] {\n      types: [Object],\n      key: 'GEOMETRY'\n    },\n    GEOGRAPHY: [class GEOGRAPHY extends ABSTRACT] {\n      types: [Object],\n      key: 'GEOGRAPHY'\n    },\n    CIDR: [class CIDR extends ABSTRACT] { types: [Object], key: 'CIDR' },\n    INET: [class INET extends ABSTRACT] { types: [Object], key: 'INET' },\n    MACADDR: [class MACADDR extends ABSTRACT] { types: [Object], key: 'MACADDR' },\n    CITEXT: [class CITEXT extends ABSTRACT] { types: [Object], key: 'CITEXT' },\n    TSVECTOR: [class TSVECTOR extends ABSTRACT] {\n      types: [Object],\n      key: 'TSVECTOR'\n    },\n    postgres: {\n      DECIMAL: [class DECIMAL extends DECIMAL],\n      BLOB: [class BLOB extends BLOB],\n      STRING: [class STRING extends STRING],\n      CHAR: [class CHAR extends CHAR],\n      TEXT: [class TEXT extends TEXT],\n      CITEXT: [class CITEXT extends CITEXT],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      INTEGER: [Function],\n      BIGINT: [class BIGINT extends BIGINT],\n      BOOLEAN: [Function],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      REAL: [class REAL extends REAL],\n      'DOUBLE PRECISION': [class DOUBLE extends DOUBLE],\n      FLOAT: [class FLOAT extends FLOAT],\n      GEOMETRY: [class GEOMETRY extends GEOMETRY],\n      GEOGRAPHY: [class GEOGRAPHY extends GEOGRAPHY],\n      HSTORE: [class HSTORE extends HSTORE],\n      RANGE: [class RANGE extends RANGE],\n      ENUM: [class ENUM extends ENUM]\n    },\n    mysql: {\n      ENUM: [class ENUM extends ENUM],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      UUID: [class UUID extends UUID],\n      GEOMETRY: [class GEOMETRY extends GEOMETRY],\n      DECIMAL: [class DECIMAL extends DECIMAL],\n      JSON: [class JSONTYPE extends JSONTYPE]\n    },\n    mariadb: {\n      ENUM: [class ENUM extends ENUM],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      UUID: [class UUID extends UUID],\n      GEOMETRY: [class GEOMETRY extends GEOMETRY],\n      DECIMAL: [class DECIMAL extends DECIMAL],\n      JSON: [class JSONTYPE extends JSONTYPE]\n    },\n    sqlite: {\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      STRING: [class STRING extends STRING],\n      CHAR: [class CHAR extends CHAR],\n      NUMBER: [class NUMBER extends NUMBER],\n      FLOAT: [Function],\n      REAL: [Function],\n      'DOUBLE PRECISION': [Function],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      MEDIUMINT: [class MEDIUMINT extends MEDIUMINT],\n      INTEGER: [class INTEGER extends INTEGER],\n      BIGINT: [class BIGINT extends BIGINT],\n      TEXT: [class TEXT extends TEXT],\n      ENUM: [class ENUM extends ENUM],\n      JSON: [class JSONTYPE extends JSONTYPE],\n      CITEXT: [class CITEXT extends CITEXT]\n    },\n    mssql: {\n      BLOB: [class BLOB extends BLOB],\n      BOOLEAN: [class BOOLEAN extends BOOLEAN],\n      ENUM: [class ENUM extends ENUM],\n      STRING: [class STRING extends STRING],\n      UUID: [class UUID extends UUID],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      NOW: [class NOW extends NOW],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      INTEGER: [class INTEGER extends INTEGER],\n      BIGINT: [class BIGINT extends BIGINT],\n      REAL: [class REAL extends REAL],\n      FLOAT: [class FLOAT extends FLOAT],\n      TEXT: [class TEXT extends TEXT]\n    },\n    db2: {\n      BLOB: [class BLOB extends BLOB],\n      BOOLEAN: [Function],\n      ENUM: [class ENUM extends ENUM],\n      STRING: [class STRING extends STRING],\n      UUID: [class UUID extends UUID],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      NOW: [class NOW extends NOW],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      INTEGER: [class INTEGER extends INTEGER],\n      DOUBLE: [Function],\n      'DOUBLE PRECISION': [Function],\n      BIGINT: [class BIGINT extends BIGINT],\n      REAL: [class REAL extends REAL],\n      FLOAT: [class FLOAT extends FLOAT],\n      TEXT: [class TEXT extends TEXT]\n    },\n    snowflake: {\n      TEXT: [class TEXT extends TEXT],\n      DATE: [class DATE extends DATE],\n      BOOLEAN: [class BOOLEAN extends BOOLEAN],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      UUID: [class UUID extends UUID],\n      JSON: [class JSONTYPE extends JSONTYPE]\n    },\n    oracle: {\n      BOOLEAN: [class BOOLEAN extends BOOLEAN],\n      'DOUBLE PRECISION': [class DOUBLE extends DOUBLE],\n      DOUBLE: [class DOUBLE extends DOUBLE],\n      STRING: [class STRING extends STRING],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      MEDIUMINT: [class MEDIUMINT extends MEDIUMINT],\n      BIGINT: [class BIGINT extends BIGINT],\n      NUMBER: [class NUMBER extends NUMBER],\n      INTEGER: [class INTEGER extends INTEGER],\n      FLOAT: [class FLOAT extends FLOAT],\n      UUID: [class UUID extends UUID],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      DATE: [class DATE extends DATE],\n      NOW: [class NOW extends NOW],\n      BLOB: [class BLOB extends BLOB],\n      ENUM: [class ENUM extends ENUM],\n      TEXT: [class TEXT extends TEXT],\n      CHAR: [class CHAR extends CHAR],\n      JSON: [class JSONTYPE extends JSONTYPE],\n      REAL: [class REAL extends REAL],\n      DECIMAL: [class DECIMAL extends DECIMAL]\n    },\n    Deferrable: {\n      INITIALLY_DEFERRED: [class INITIALLY_DEFERRED extends ABSTRACT],\n      INITIALLY_IMMEDIATE: [class INITIALLY_IMMEDIATE extends ABSTRACT],\n      NOT: [class NOT extends ABSTRACT],\n      SET_DEFERRED: [class SET_DEFERRED extends ABSTRACT],\n      SET_IMMEDIATE: [class SET_IMMEDIATE extends ABSTRACT]\n    },\n    Association: <ref *6> [class Association] {\n      BelongsTo: [Function],\n      HasOne: [class HasOne extends Association],\n      HasMany: [Function],\n      BelongsToMany: [Function],\n      default: [Circular *6],\n      Association: [Circular *6]\n    },\n    useInflection: [Function: useInflection],\n    _setupHooks: [Function: _setupHooks],\n    runHooks: [AsyncFunction: runHooks],\n    addHook: [Function: addHook],\n    removeHook: [Function: removeHook],\n    hasHook: [Function: hasHook],\n    hasHooks: [Function: hasHook],\n    beforeValidate: [Function (anonymous)],\n    afterValidate: [Function (anonymous)],\n    validationFailed: [Function (anonymous)],\n    beforeCreate: [Function (anonymous)],\n    afterCreate: [Function (anonymous)],\n    beforeDestroy: [Function (anonymous)],\n    afterDestroy: [Function (anonymous)],\n    beforeRestore: [Function (anonymous)],\n    afterRestore: [Function (anonymous)],\n    beforeUpdate: [Function (anonymous)],\n    afterUpdate: [Function (anonymous)],\n    beforeSave: [Function (anonymous)],\n    afterSave: [Function (anonymous)],\n    beforeUpsert: [Function (anonymous)],\n    afterUpsert: [Function (anonymous)],\n    beforeBulkCreate: [Function (anonymous)],\n    afterBulkCreate: [Function (anonymous)],\n    beforeBulkDestroy: [Function (anonymous)],\n    afterBulkDestroy: [Function (anonymous)],\n    beforeBulkRestore: [Function (anonymous)],\n    afterBulkRestore: [Function (anonymous)],\n    beforeBulkUpdate: [Function (anonymous)],\n    afterBulkUpdate: [Function (anonymous)],\n    beforeFind: [Function (anonymous)],\n    beforeFindAfterExpandIncludeAll: [Function (anonymous)],\n    beforeFindAfterOptions: [Function (anonymous)],\n    afterFind: [Function (anonymous)],\n    beforeCount: [Function (anonymous)],\n    beforeDefine: [Function (anonymous)],\n    afterDefine: [Function (anonymous)],\n    beforeInit: [Function (anonymous)],\n    afterInit: [Function (anonymous)],\n    beforeAssociate: [Function (anonymous)],\n    afterAssociate: [Function (anonymous)],\n    beforeConnect: [Function (anonymous)],\n    afterConnect: [Function (anonymous)],\n    beforeDisconnect: [Function (anonymous)],\n    afterDisconnect: [Function (anonymous)],\n    beforeSync: [Function (anonymous)],\n    afterSync: [Function (anonymous)],\n    beforeBulkSync: [Function (anonymous)],\n    afterBulkSync: [Function (anonymous)],\n    beforeQuery: [Function (anonymous)],\n    afterQuery: [Function (anonymous)],\n    Error: [class BaseError extends Error],\n    AccessDeniedError: [class AccessDeniedError extends ConnectionError],\n    AggregateError: [class AggregateError extends BaseError],\n    AssociationError: [class AssociationError extends BaseError],\n    AsyncQueueError: [class AsyncQueueError extends BaseError],\n    BaseError: [class BaseError extends Error],\n    BulkRecordError: [class BulkRecordError extends BaseError],\n    ConnectionAcquireTimeoutError: [class ConnectionAcquireTimeoutError extends ConnectionError],\n    ConnectionError: [class ConnectionError extends BaseError],\n    ConnectionRefusedError: [class ConnectionRefusedError extends ConnectionError],\n    ConnectionTimedOutError: [class ConnectionTimedOutError extends ConnectionError],\n    DatabaseError: [class DatabaseError extends BaseError],\n    EagerLoadingError: [class EagerLoadingError extends BaseError],\n    EmptyResultError: [class EmptyResultError extends BaseError],\n    ExclusionConstraintError: [class ExclusionConstraintError extends DatabaseError],\n    ForeignKeyConstraintError: [class ForeignKeyConstraintError extends DatabaseError],\n    HostNotFoundError: [class HostNotFoundError extends ConnectionError],\n    HostNotReachableError: [class HostNotReachableError extends ConnectionError],\n    InstanceError: [class InstanceError extends BaseError],\n    InvalidConnectionError: [class InvalidConnectionError extends ConnectionError],\n    OptimisticLockError: [class OptimisticLockError extends BaseError],\n    QueryError: [class QueryError extends BaseError],\n    SequelizeScopeError: [class SequelizeScopeError extends BaseError],\n    TimeoutError: [class TimeoutError extends DatabaseError],\n    UniqueConstraintError: [class UniqueConstraintError extends ValidationError],\n    UnknownConstraintError: [class UnknownConstraintError extends DatabaseError],\n    ValidationError: [class ValidationError extends BaseError],\n    ValidationErrorItem: [class ValidationErrorItem] {\n      TypeStringMap: [Object],\n      Origins: [Object]\n    },\n    ValidationErrorItemOrigin: { CORE: 'CORE', DB: 'DB', FUNCTION: 'FUNCTION' },\n    ValidationErrorItemType: {\n      'notnull violation': 'CORE',\n      'string violation': 'CORE',\n      'unique violation': 'DB',\n      'validation error': 'FUNCTION'\n    },\n    Sequelize: [Circular *7],\n    default: [Circular *7]\n  },\n  sequelize: <ref *8> Sequelize {\n    options: {\n      dialect: 'mysql',\n      dialectModule: null,\n      dialectModulePath: null,\n      host: 'localhost',\n      protocol: 'tcp',\n      define: {},\n      query: {},\n      sync: {},\n      timezone: '+00:00',\n      standardConformingStrings: true,\n      logging: [Function: log],\n      omitNull: false,\n      native: false,\n      replication: false,\n      ssl: undefined,\n      pool: [Object],\n      quoteIdentifiers: true,\n      hooks: {},\n      retry: [Object],\n      transactionType: 'DEFERRED',\n      isolationLevel: null,\n      databaseVersion: 0,\n      typeValidation: false,\n      benchmark: false,\n      minifyAliases: false,\n      logQueryParameters: false\n    },\n    config: {\n      database: 'tc_db',\n      username: 'root',\n      password: 'Root@123',\n      host: 'localhost',\n      port: 3306,\n      pool: [Object],\n      protocol: 'tcp',\n      native: false,\n      ssl: undefined,\n      replication: false,\n      dialectModule: null,\n      dialectModulePath: null,\n      keepDefaultTimezone: undefined,\n      dialectOptions: undefined\n    },\n    dialect: MysqlDialect {\n      sequelize: [Circular *8],\n      connectionManager: [ConnectionManager],\n      queryGenerator: [MySQLQueryGenerator],\n      queryInterface: [MySQLQueryInterface]\n    },\n    queryInterface: MySQLQueryInterface {\n      sequelize: [Circular *8],\n      queryGenerator: [MySQLQueryGenerator]\n    },\n    models: { tutorial: tutorial },\n    modelManager: ModelManager { models: [Array], sequelize: [Circular *8] },\n    connectionManager: ConnectionManager {\n      sequelize: [Circular *8],\n      config: [Object],\n      dialect: [MysqlDialect],\n      versionPromise: [Promise],\n      dialectName: 'mysql',\n      pool: [Pool],\n      lib: [Object]\n    }\n  },\n  tutorials: tutorial\n}","time":"2022-10-25T17:10:52.626Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23380,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:10:52.685Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23380,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:10:52.759Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":5456,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:11:24.961Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":5456,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:11:25.121Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":5456,"level":30,"msg":"Synced db.","time":"2022-10-25T17:11:25.200Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18844,"level":30,"msg":"db has been established successfully. {\n  Sequelize: <ref *7> [class Sequelize] {\n    version: [Getter],\n    options: { hooks: {} },\n    Utils: {\n      classToInvokable: [Function: classToInvokable],\n      joinSQLFragments: [Function: joinSQLFragments],\n      useInflection: [Function: useInflection],\n      camelizeIf: [Function: camelizeIf],\n      underscoredIf: [Function: underscoredIf],\n      isPrimitive: [Function: isPrimitive],\n      mergeDefaults: [Function: mergeDefaults],\n      merge: [Function: merge],\n      spliceStr: [Function: spliceStr],\n      camelize: [Function: camelize],\n      underscore: [Function: underscore],\n      singularize: [Function: singularize],\n      pluralize: [Function: pluralize],\n      format: [Function: format],\n      formatNamedParameters: [Function: formatNamedParameters],\n      cloneDeep: [Function: cloneDeep],\n      mapFinderOptions: [Function: mapFinderOptions],\n      mapOptionFieldNames: [Function: mapOptionFieldNames],\n      mapWhereFieldNames: [Function: mapWhereFieldNames],\n      mapValueFieldNames: [Function: mapValueFieldNames],\n      isColString: [Function: isColString],\n      canTreatArrayAsAnd: [Function: canTreatArrayAsAnd],\n      combineTableNames: [Function: combineTableNames],\n      toDefaultValue: [Function: toDefaultValue],\n      defaultValueSchemable: [Function: defaultValueSchemable],\n      removeNullValuesFromHash: [Function: removeNullValuesFromHash],\n      now: [Function: now],\n      TICK_CHAR: '`',\n      addTicks: [Function: addTicks],\n      removeTicks: [Function: removeTicks],\n      flattenObjectDeep: [Function: flattenObjectDeep],\n      SequelizeMethod: [class SequelizeMethod],\n      Fn: [class Fn extends SequelizeMethod],\n      Col: [class Col extends SequelizeMethod],\n      Cast: [class Cast extends SequelizeMethod],\n      Literal: [class Literal extends SequelizeMethod],\n      Json: [class Json extends SequelizeMethod],\n      Where: [class Where extends SequelizeMethod],\n      getOperators: [Function: getOperators],\n      getComplexKeys: [Function: getComplexKeys],\n      getComplexSize: [Function: getComplexSize],\n      isWhereEmpty: [Function: isWhereEmpty],\n      generateEnumName: [Function: generateEnumName],\n      camelizeObjectKeys: [Function: camelizeObjectKeys],\n      defaults: [Function: defaults],\n      nameIndex: [Function: nameIndex],\n      intersects: [Function: intersects],\n      safeStringifyJson: [Function: safeStringifyJson]\n    },\n    Op: {\n      eq: Symbol(eq),\n      ne: Symbol(ne),\n      gte: Symbol(gte),\n      gt: Symbol(gt),\n      lte: Symbol(lte),\n      lt: Symbol(lt),\n      not: Symbol(not),\n      is: Symbol(is),\n      in: Symbol(in),\n      notIn: Symbol(notIn),\n      like: Symbol(like),\n      notLike: Symbol(notLike),\n      iLike: Symbol(iLike),\n      notILike: Symbol(notILike),\n      startsWith: Symbol(startsWith),\n      endsWith: Symbol(endsWith),\n      substring: Symbol(substring),\n      regexp: Symbol(regexp),\n      notRegexp: Symbol(notRegexp),\n      iRegexp: Symbol(iRegexp),\n      notIRegexp: Symbol(notIRegexp),\n      between: Symbol(between),\n      notBetween: Symbol(notBetween),\n      overlap: Symbol(overlap),\n      contains: Symbol(contains),\n      contained: Symbol(contained),\n      adjacent: Symbol(adjacent),\n      strictLeft: Symbol(strictLeft),\n      strictRight: Symbol(strictRight),\n      noExtendRight: Symbol(noExtendRight),\n      noExtendLeft: Symbol(noExtendLeft),\n      and: Symbol(and),\n      or: Symbol(or),\n      any: Symbol(any),\n      all: Symbol(all),\n      values: Symbol(values),\n      col: Symbol(col),\n      placeholder: Symbol(placeholder),\n      join: Symbol(join),\n      match: Symbol(match)\n    },\n    TableHints: {\n      NOLOCK: 'NOLOCK',\n      READUNCOMMITTED: 'READUNCOMMITTED',\n      UPDLOCK: 'UPDLOCK',\n      REPEATABLEREAD: 'REPEATABLEREAD',\n      SERIALIZABLE: 'SERIALIZABLE',\n      READCOMMITTED: 'READCOMMITTED',\n      TABLOCK: 'TABLOCK',\n      TABLOCKX: 'TABLOCKX',\n      PAGLOCK: 'PAGLOCK',\n      ROWLOCK: 'ROWLOCK',\n      NOWAIT: 'NOWAIT',\n      READPAST: 'READPAST',\n      XLOCK: 'XLOCK',\n      SNAPSHOT: 'SNAPSHOT',\n      NOEXPAND: 'NOEXPAND'\n    },\n    IndexHints: { USE: 'USE', FORCE: 'FORCE', IGNORE: 'IGNORE' },\n    Transaction: <ref *1> [class Transaction] {\n      Transaction: [Circular *1],\n      default: [Circular *1]\n    },\n    QueryTypes: {\n      SELECT: 'SELECT',\n      INSERT: 'INSERT',\n      UPDATE: 'UPDATE',\n      BULKUPDATE: 'BULKUPDATE',\n      BULKDELETE: 'BULKDELETE',\n      DELETE: 'DELETE',\n      UPSERT: 'UPSERT',\n      VERSION: 'VERSION',\n      SHOWTABLES: 'SHOWTABLES',\n      SHOWINDEXES: 'SHOWINDEXES',\n      DESCRIBE: 'DESCRIBE',\n      RAW: 'RAW',\n      FOREIGNKEYS: 'FOREIGNKEYS',\n      SHOWCONSTRAINTS: 'SHOWCONSTRAINTS'\n    },\n    Validator: <ref *2> {\n      version: '13.7.0',\n      toDate: [Function],\n      toFloat: [Function],\n      toInt: [Function],\n      toBoolean: [Function],\n      equals: [Function],\n      contains: [Function: contains],\n      matches: [Function],\n      isEmail: [Function],\n      isURL: [Function],\n      isMACAddress: [Function],\n      isIP: [Function],\n      isIPRange: [Function],\n      isFQDN: [Function],\n      isBoolean: [Function],\n      isIBAN: [Function: isIBAN],\n      isBIC: [Function],\n      isAlpha: [Function: isAlpha],\n      isAlphaLocales: [Array],\n      isAlphanumeric: [Function: isAlphanumeric],\n      isAlphanumericLocales: [Array],\n      isNumeric: [Function],\n      isPassportNumber: [Function],\n      isPort: [Function],\n      isLowercase: [Function],\n      isUppercase: [Function],\n      isAscii: [Function],\n      isFullWidth: [Function: isFullWidth],\n      isHalfWidth: [Function: isHalfWidth],\n      isVariableWidth: [Function],\n      isMultibyte: [Function],\n      isSemVer: [Function],\n      isSurrogatePair: [Function],\n      isInt: [Function],\n      isIMEI: [Function],\n      isFloat: [Function: isFloat],\n      isFloatLocales: [Array],\n      isDecimal: [Function: isDecimal],\n      isHexadecimal: [Function],\n      isOctal: [Function],\n      isDivisibleBy: [Function],\n      isHexColor: [Function],\n      isRgbColor: [Function],\n      isHSL: [Function],\n      isISRC: [Function],\n      isMD5: [Function],\n      isHash: [Function],\n      isJWT: [Function],\n      isJSON: [Function],\n      isEmpty: [Function],\n      isLength: [Function],\n      isLocale: [Function],\n      isByteLength: [Function],\n      isUUID: [Function],\n      isMongoId: [Function],\n      isAfter: [Function],\n      isBefore: [Function],\n      isIn: [Function],\n      isCreditCard: [Function],\n      isIdentityCard: [Function],\n      isEAN: [Function],\n      isISIN: [Function],\n      isISBN: [Function],\n      isISSN: [Function],\n      isMobilePhone: [Function: isMobilePhone],\n      isMobilePhoneLocales: [Array],\n      isPostalCode: [Function: isPostalCode],\n      isPostalCodeLocales: [Array],\n      isEthereumAddress: [Function],\n      isCurrency: [Function],\n      isBtcAddress: [Function],\n      isISO8601: [Function],\n      isRFC3339: [Function],\n      isISO31661Alpha2: [Function: isISO31661Alpha2],\n      isISO31661Alpha3: [Function],\n      isISO4217: [Function: isISO4217],\n      isBase32: [Function],\n      isBase58: [Function],\n      isBase64: [Function],\n      isDataURI: [Function],\n      isMagnetURI: [Function],\n      isMimeType: [Function],\n      isLatLong: [Function],\n      ltrim: [Function],\n      rtrim: [Function],\n      trim: [Function],\n      escape: [Function],\n      unescape: [Function],\n      stripLow: [Function],\n      whitelist: [Function],\n      blacklist: [Function],\n      isWhitelisted: [Function],\n      normalizeEmail: [Function],\n      toString: [Function: toString],\n      isSlug: [Function],\n      isStrongPassword: [Function],\n      isTaxID: [Function],\n      isDate: [Function (anonymous)],\n      isLicensePlate: [Function],\n      isVAT: [Function: isVAT],\n      ibanLocales: [Array],\n      default: [Circular *2],\n      isImmutable: [Function (anonymous)],\n      notNull: [Function (anonymous)],\n      extend: [Function: extend],\n      notEmpty: [Function: notEmpty],\n      len: [Function: len],\n      isUrl: [Function: isUrl],\n      isIPv6: [Function: isIPv6],\n      isIPv4: [Function: isIPv4],\n      notIn: [Function: notIn],\n      regex: [Function: regex],\n      notRegex: [Function: notRegex],\n      min: [Function: min],\n      max: [Function: max],\n      not: [Function: not],\n      notContains: [Function: notContains],\n      is: [Function: is],\n      isNull: [Function]\n    },\n    Model: Model,\n    QueryInterface: [class QueryInterface],\n    BelongsTo: <ref *3> [class BelongsTo extends Association] {\n      BelongsTo: [Circular *3],\n      default: [Circular *3]\n    },\n    HasOne: [class HasOne extends Association],\n    HasMany: <ref *4> [class HasMany extends Association] {\n      HasMany: [Circular *4],\n      default: [Circular *4]\n    },\n    BelongsToMany: <ref *5> [class BelongsToMany extends Association] {\n      BelongsToMany: [Circular *5],\n      default: [Circular *5]\n    },\n    DataTypes: {\n      ABSTRACT: [Function],\n      STRING: [Function],\n      CHAR: [Function],\n      TEXT: [Function],\n      NUMBER: [Function],\n      TINYINT: [Function],\n      SMALLINT: [Function],\n      MEDIUMINT: [Function],\n      INTEGER: [Function],\n      BIGINT: [Function],\n      FLOAT: [Function],\n      TIME: [Function],\n      DATE: [Function],\n      DATEONLY: [Function],\n      BOOLEAN: [Function],\n      NOW: [Function],\n      BLOB: [Function],\n      DECIMAL: [Function],\n      NUMERIC: [Function],\n      UUID: [Function],\n      UUIDV1: [Function],\n      UUIDV4: [Function],\n      HSTORE: [Function],\n      JSON: [Function],\n      JSONB: [Function],\n      VIRTUAL: [Function],\n      ARRAY: [Function],\n      ENUM: [Function],\n      RANGE: [Function],\n      REAL: [Function],\n      'DOUBLE PRECISION': [Function],\n      DOUBLE: [Function],\n      GEOMETRY: [Function],\n      GEOGRAPHY: [Function],\n      CIDR: [Function],\n      INET: [Function],\n      MACADDR: [Function],\n      CITEXT: [Function],\n      TSVECTOR: [Function],\n      postgres: [Object],\n      mysql: [Object],\n      mariadb: [Object],\n      sqlite: [Object],\n      mssql: [Object],\n      db2: [Object],\n      snowflake: [Object],\n      oracle: [Object]\n    },\n    ABSTRACT: [class ABSTRACT] { types: {}, key: 'ABSTRACT' },\n    STRING: [class STRING extends ABSTRACT] { types: [Object], key: 'STRING' },\n    CHAR: [class CHAR extends STRING] { types: [Object], key: 'CHAR' },\n    TEXT: [class TEXT extends ABSTRACT] { types: [Object], key: 'TEXT' },\n    NUMBER: [class NUMBER extends ABSTRACT] { types: {}, key: 'NUMBER' },\n    TINYINT: [class TINYINT extends INTEGER] { types: [Object], key: 'TINYINT' },\n    SMALLINT: [class SMALLINT extends INTEGER] {\n      types: [Object],\n      key: 'SMALLINT'\n    },\n    MEDIUMINT: [class MEDIUMINT extends INTEGER] {\n      types: [Object],\n      key: 'MEDIUMINT'\n    },\n    INTEGER: [class INTEGER extends NUMBER] { types: [Object], key: 'INTEGER' },\n    BIGINT: [class BIGINT extends INTEGER] { types: [Object], key: 'BIGINT' },\n    FLOAT: [class FLOAT extends NUMBER] { types: [Object], key: 'FLOAT' },\n    TIME: [class TIME extends ABSTRACT] { types: [Object], key: 'TIME' },\n    DATE: [class DATE extends ABSTRACT] { types: [Object], key: 'DATE' },\n    DATEONLY: [class DATEONLY extends ABSTRACT] {\n      types: [Object],\n      key: 'DATEONLY'\n    },\n    BOOLEAN: [class BOOLEAN extends ABSTRACT] {\n      parse: [Function: _sanitize],\n      types: [Object],\n      key: 'BOOLEAN'\n    },\n    NOW: [class NOW extends ABSTRACT] { types: {}, key: 'NOW' },\n    BLOB: [class BLOB extends ABSTRACT] { types: [Object], key: 'BLOB' },\n    DECIMAL: [class DECIMAL extends NUMBER] { types: [Object], key: 'DECIMAL' },\n    NUMERIC: [class DECIMAL extends NUMBER] { types: [Object], key: 'DECIMAL' },\n    UUID: [class UUID extends ABSTRACT] { types: [Object], key: 'UUID' },\n    UUIDV1: [class UUIDV1 extends ABSTRACT] { types: {}, key: 'UUIDV1' },\n    UUIDV4: [class UUIDV4 extends ABSTRACT] { types: {}, key: 'UUIDV4' },\n    HSTORE: [class HSTORE extends ABSTRACT] { types: [Object], key: 'HSTORE' },\n    JSON: [class JSONTYPE extends ABSTRACT] { types: [Object], key: 'JSON' },\n    JSONB: [class JSONB extends JSONTYPE] { types: [Object], key: 'JSONB' },\n    VIRTUAL: [class VIRTUAL extends ABSTRACT] { types: {}, key: 'VIRTUAL' },\n    ARRAY: [class ARRAY extends ABSTRACT] { types: {}, key: 'ARRAY' },\n    ENUM: [class ENUM extends ABSTRACT] { types: [Object], key: 'ENUM' },\n    RANGE: [class RANGE extends ABSTRACT] { types: [Object], key: 'RANGE' },\n    REAL: [class REAL extends NUMBER] { types: [Object], key: 'REAL' },\n    'DOUBLE PRECISION': [class DOUBLE extends NUMBER] {\n      types: [Object],\n      key: 'DOUBLE PRECISION'\n    },\n    DOUBLE: [class DOUBLE extends NUMBER] {\n      types: [Object],\n      key: 'DOUBLE PRECISION'\n    },\n    GEOMETRY: [class GEOMETRY extends ABSTRACT] {\n      types: [Object],\n      key: 'GEOMETRY'\n    },\n    GEOGRAPHY: [class GEOGRAPHY extends ABSTRACT] {\n      types: [Object],\n      key: 'GEOGRAPHY'\n    },\n    CIDR: [class CIDR extends ABSTRACT] { types: [Object], key: 'CIDR' },\n    INET: [class INET extends ABSTRACT] { types: [Object], key: 'INET' },\n    MACADDR: [class MACADDR extends ABSTRACT] { types: [Object], key: 'MACADDR' },\n    CITEXT: [class CITEXT extends ABSTRACT] { types: [Object], key: 'CITEXT' },\n    TSVECTOR: [class TSVECTOR extends ABSTRACT] {\n      types: [Object],\n      key: 'TSVECTOR'\n    },\n    postgres: {\n      DECIMAL: [class DECIMAL extends DECIMAL],\n      BLOB: [class BLOB extends BLOB],\n      STRING: [class STRING extends STRING],\n      CHAR: [class CHAR extends CHAR],\n      TEXT: [class TEXT extends TEXT],\n      CITEXT: [class CITEXT extends CITEXT],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      INTEGER: [Function],\n      BIGINT: [class BIGINT extends BIGINT],\n      BOOLEAN: [Function],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      REAL: [class REAL extends REAL],\n      'DOUBLE PRECISION': [class DOUBLE extends DOUBLE],\n      FLOAT: [class FLOAT extends FLOAT],\n      GEOMETRY: [class GEOMETRY extends GEOMETRY],\n      GEOGRAPHY: [class GEOGRAPHY extends GEOGRAPHY],\n      HSTORE: [class HSTORE extends HSTORE],\n      RANGE: [class RANGE extends RANGE],\n      ENUM: [class ENUM extends ENUM]\n    },\n    mysql: {\n      ENUM: [class ENUM extends ENUM],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      UUID: [class UUID extends UUID],\n      GEOMETRY: [class GEOMETRY extends GEOMETRY],\n      DECIMAL: [class DECIMAL extends DECIMAL],\n      JSON: [class JSONTYPE extends JSONTYPE]\n    },\n    mariadb: {\n      ENUM: [class ENUM extends ENUM],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      UUID: [class UUID extends UUID],\n      GEOMETRY: [class GEOMETRY extends GEOMETRY],\n      DECIMAL: [class DECIMAL extends DECIMAL],\n      JSON: [class JSONTYPE extends JSONTYPE]\n    },\n    sqlite: {\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      STRING: [class STRING extends STRING],\n      CHAR: [class CHAR extends CHAR],\n      NUMBER: [class NUMBER extends NUMBER],\n      FLOAT: [Function],\n      REAL: [Function],\n      'DOUBLE PRECISION': [Function],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      MEDIUMINT: [class MEDIUMINT extends MEDIUMINT],\n      INTEGER: [class INTEGER extends INTEGER],\n      BIGINT: [class BIGINT extends BIGINT],\n      TEXT: [class TEXT extends TEXT],\n      ENUM: [class ENUM extends ENUM],\n      JSON: [class JSONTYPE extends JSONTYPE],\n      CITEXT: [class CITEXT extends CITEXT]\n    },\n    mssql: {\n      BLOB: [class BLOB extends BLOB],\n      BOOLEAN: [class BOOLEAN extends BOOLEAN],\n      ENUM: [class ENUM extends ENUM],\n      STRING: [class STRING extends STRING],\n      UUID: [class UUID extends UUID],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      NOW: [class NOW extends NOW],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      INTEGER: [class INTEGER extends INTEGER],\n      BIGINT: [class BIGINT extends BIGINT],\n      REAL: [class REAL extends REAL],\n      FLOAT: [class FLOAT extends FLOAT],\n      TEXT: [class TEXT extends TEXT]\n    },\n    db2: {\n      BLOB: [class BLOB extends BLOB],\n      BOOLEAN: [Function],\n      ENUM: [class ENUM extends ENUM],\n      STRING: [class STRING extends STRING],\n      UUID: [class UUID extends UUID],\n      DATE: [class DATE extends DATE],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      NOW: [class NOW extends NOW],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      INTEGER: [class INTEGER extends INTEGER],\n      DOUBLE: [Function],\n      'DOUBLE PRECISION': [Function],\n      BIGINT: [class BIGINT extends BIGINT],\n      REAL: [class REAL extends REAL],\n      FLOAT: [class FLOAT extends FLOAT],\n      TEXT: [class TEXT extends TEXT]\n    },\n    snowflake: {\n      TEXT: [class TEXT extends TEXT],\n      DATE: [class DATE extends DATE],\n      BOOLEAN: [class BOOLEAN extends BOOLEAN],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      UUID: [class UUID extends UUID],\n      JSON: [class JSONTYPE extends JSONTYPE]\n    },\n    oracle: {\n      BOOLEAN: [class BOOLEAN extends BOOLEAN],\n      'DOUBLE PRECISION': [class DOUBLE extends DOUBLE],\n      DOUBLE: [class DOUBLE extends DOUBLE],\n      STRING: [class STRING extends STRING],\n      TINYINT: [class TINYINT extends TINYINT],\n      SMALLINT: [class SMALLINT extends SMALLINT],\n      MEDIUMINT: [class MEDIUMINT extends MEDIUMINT],\n      BIGINT: [class BIGINT extends BIGINT],\n      NUMBER: [class NUMBER extends NUMBER],\n      INTEGER: [class INTEGER extends INTEGER],\n      FLOAT: [class FLOAT extends FLOAT],\n      UUID: [class UUID extends UUID],\n      DATEONLY: [class DATEONLY extends DATEONLY],\n      DATE: [class DATE extends DATE],\n      NOW: [class NOW extends NOW],\n      BLOB: [class BLOB extends BLOB],\n      ENUM: [class ENUM extends ENUM],\n      TEXT: [class TEXT extends TEXT],\n      CHAR: [class CHAR extends CHAR],\n      JSON: [class JSONTYPE extends JSONTYPE],\n      REAL: [class REAL extends REAL],\n      DECIMAL: [class DECIMAL extends DECIMAL]\n    },\n    Deferrable: {\n      INITIALLY_DEFERRED: [class INITIALLY_DEFERRED extends ABSTRACT],\n      INITIALLY_IMMEDIATE: [class INITIALLY_IMMEDIATE extends ABSTRACT],\n      NOT: [class NOT extends ABSTRACT],\n      SET_DEFERRED: [class SET_DEFERRED extends ABSTRACT],\n      SET_IMMEDIATE: [class SET_IMMEDIATE extends ABSTRACT]\n    },\n    Association: <ref *6> [class Association] {\n      BelongsTo: [Function],\n      HasOne: [class HasOne extends Association],\n      HasMany: [Function],\n      BelongsToMany: [Function],\n      default: [Circular *6],\n      Association: [Circular *6]\n    },\n    useInflection: [Function: useInflection],\n    _setupHooks: [Function: _setupHooks],\n    runHooks: [AsyncFunction: runHooks],\n    addHook: [Function: addHook],\n    removeHook: [Function: removeHook],\n    hasHook: [Function: hasHook],\n    hasHooks: [Function: hasHook],\n    beforeValidate: [Function (anonymous)],\n    afterValidate: [Function (anonymous)],\n    validationFailed: [Function (anonymous)],\n    beforeCreate: [Function (anonymous)],\n    afterCreate: [Function (anonymous)],\n    beforeDestroy: [Function (anonymous)],\n    afterDestroy: [Function (anonymous)],\n    beforeRestore: [Function (anonymous)],\n    afterRestore: [Function (anonymous)],\n    beforeUpdate: [Function (anonymous)],\n    afterUpdate: [Function (anonymous)],\n    beforeSave: [Function (anonymous)],\n    afterSave: [Function (anonymous)],\n    beforeUpsert: [Function (anonymous)],\n    afterUpsert: [Function (anonymous)],\n    beforeBulkCreate: [Function (anonymous)],\n    afterBulkCreate: [Function (anonymous)],\n    beforeBulkDestroy: [Function (anonymous)],\n    afterBulkDestroy: [Function (anonymous)],\n    beforeBulkRestore: [Function (anonymous)],\n    afterBulkRestore: [Function (anonymous)],\n    beforeBulkUpdate: [Function (anonymous)],\n    afterBulkUpdate: [Function (anonymous)],\n    beforeFind: [Function (anonymous)],\n    beforeFindAfterExpandIncludeAll: [Function (anonymous)],\n    beforeFindAfterOptions: [Function (anonymous)],\n    afterFind: [Function (anonymous)],\n    beforeCount: [Function (anonymous)],\n    beforeDefine: [Function (anonymous)],\n    afterDefine: [Function (anonymous)],\n    beforeInit: [Function (anonymous)],\n    afterInit: [Function (anonymous)],\n    beforeAssociate: [Function (anonymous)],\n    afterAssociate: [Function (anonymous)],\n    beforeConnect: [Function (anonymous)],\n    afterConnect: [Function (anonymous)],\n    beforeDisconnect: [Function (anonymous)],\n    afterDisconnect: [Function (anonymous)],\n    beforeSync: [Function (anonymous)],\n    afterSync: [Function (anonymous)],\n    beforeBulkSync: [Function (anonymous)],\n    afterBulkSync: [Function (anonymous)],\n    beforeQuery: [Function (anonymous)],\n    afterQuery: [Function (anonymous)],\n    Error: [class BaseError extends Error],\n    AccessDeniedError: [class AccessDeniedError extends ConnectionError],\n    AggregateError: [class AggregateError extends BaseError],\n    AssociationError: [class AssociationError extends BaseError],\n    AsyncQueueError: [class AsyncQueueError extends BaseError],\n    BaseError: [class BaseError extends Error],\n    BulkRecordError: [class BulkRecordError extends BaseError],\n    ConnectionAcquireTimeoutError: [class ConnectionAcquireTimeoutError extends ConnectionError],\n    ConnectionError: [class ConnectionError extends BaseError],\n    ConnectionRefusedError: [class ConnectionRefusedError extends ConnectionError],\n    ConnectionTimedOutError: [class ConnectionTimedOutError extends ConnectionError],\n    DatabaseError: [class DatabaseError extends BaseError],\n    EagerLoadingError: [class EagerLoadingError extends BaseError],\n    EmptyResultError: [class EmptyResultError extends BaseError],\n    ExclusionConstraintError: [class ExclusionConstraintError extends DatabaseError],\n    ForeignKeyConstraintError: [class ForeignKeyConstraintError extends DatabaseError],\n    HostNotFoundError: [class HostNotFoundError extends ConnectionError],\n    HostNotReachableError: [class HostNotReachableError extends ConnectionError],\n    InstanceError: [class InstanceError extends BaseError],\n    InvalidConnectionError: [class InvalidConnectionError extends ConnectionError],\n    OptimisticLockError: [class OptimisticLockError extends BaseError],\n    QueryError: [class QueryError extends BaseError],\n    SequelizeScopeError: [class SequelizeScopeError extends BaseError],\n    TimeoutError: [class TimeoutError extends DatabaseError],\n    UniqueConstraintError: [class UniqueConstraintError extends ValidationError],\n    UnknownConstraintError: [class UnknownConstraintError extends DatabaseError],\n    ValidationError: [class ValidationError extends BaseError],\n    ValidationErrorItem: [class ValidationErrorItem] {\n      TypeStringMap: [Object],\n      Origins: [Object]\n    },\n    ValidationErrorItemOrigin: { CORE: 'CORE', DB: 'DB', FUNCTION: 'FUNCTION' },\n    ValidationErrorItemType: {\n      'notnull violation': 'CORE',\n      'string violation': 'CORE',\n      'unique violation': 'DB',\n      'validation error': 'FUNCTION'\n    },\n    Sequelize: [Circular *7],\n    default: [Circular *7]\n  },\n  sequelize: <ref *8> Sequelize {\n    options: {\n      dialect: 'mysql',\n      dialectModule: null,\n      dialectModulePath: null,\n      host: 'localhost',\n      protocol: 'tcp',\n      define: {},\n      query: {},\n      sync: {},\n      timezone: '+00:00',\n      standardConformingStrings: true,\n      logging: [Function: log],\n      omitNull: false,\n      native: false,\n      replication: false,\n      ssl: undefined,\n      pool: [Object],\n      quoteIdentifiers: true,\n      hooks: {},\n      retry: [Object],\n      transactionType: 'DEFERRED',\n      isolationLevel: null,\n      databaseVersion: 0,\n      typeValidation: false,\n      benchmark: false,\n      minifyAliases: false,\n      logQueryParameters: false\n    },\n    config: {\n      database: 'tc_db',\n      username: 'root',\n      password: 'Root@123',\n      host: 'localhost',\n      port: 3306,\n      pool: [Object],\n      protocol: 'tcp',\n      native: false,\n      ssl: undefined,\n      replication: false,\n      dialectModule: null,\n      dialectModulePath: null,\n      keepDefaultTimezone: undefined,\n      dialectOptions: undefined\n    },\n    dialect: MysqlDialect {\n      sequelize: [Circular *8],\n      connectionManager: [ConnectionManager],\n      queryGenerator: [MySQLQueryGenerator],\n      queryInterface: [MySQLQueryInterface]\n    },\n    queryInterface: MySQLQueryInterface {\n      sequelize: [Circular *8],\n      queryGenerator: [MySQLQueryGenerator]\n    },\n    models: { tutorial: tutorial, users: users },\n    modelManager: ModelManager { models: [Array], sequelize: [Circular *8] },\n    connectionManager: ConnectionManager {\n      sequelize: [Circular *8],\n      config: [Object],\n      dialect: [MysqlDialect],\n      versionPromise: [Promise],\n      dialectName: 'mysql',\n      pool: [Pool],\n      lib: [Object]\n    }\n  },\n  tutorials: tutorial,\n  users: users\n}","time":"2022-10-25T17:27:48.866Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18844,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:27:48.903Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18844,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:27:48.973Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18844,"level":30,"msg":"Synced db.","time":"2022-10-25T17:27:50.276Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18232,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:28:20.751Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18232,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:28:20.804Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18232,"level":30,"msg":"Synced db.","time":"2022-10-25T17:28:20.819Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":8832,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:44:33.743Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":8832,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:44:33.828Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":8832,"level":30,"msg":"Synced db.","time":"2022-10-25T17:44:33.859Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21740,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:45:07.227Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21740,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:45:07.278Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21740,"level":30,"msg":"Synced db.","time":"2022-10-25T17:45:07.347Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":20688,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:45:41.425Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":20688,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:45:41.489Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":20688,"level":30,"msg":"Synced db.","time":"2022-10-25T17:45:41.554Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18236,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:46:15.886Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18236,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:46:15.932Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18236,"level":30,"msg":"Synced db.","time":"2022-10-25T17:46:15.941Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":2516,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:46:36.132Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":2516,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:46:36.205Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":2516,"level":30,"msg":"Synced db.","time":"2022-10-25T17:46:36.405Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22464,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:50:38.459Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22464,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:50:38.507Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22464,"level":30,"msg":"Synced db.","time":"2022-10-25T17:50:38.518Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22696,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T17:50:51.618Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22696,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T17:50:51.679Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22696,"level":30,"msg":"Synced db.","time":"2022-10-25T17:50:51.692Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18104,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:02:16.472Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18104,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:02:16.537Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18104,"level":30,"msg":"Synced db.","time":"2022-10-25T18:02:16.664Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18940,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:08:49.104Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18940,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:08:49.321Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18940,"level":30,"msg":"Synced db.","time":"2022-10-25T18:08:49.333Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13224,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:09:22.077Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13224,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:09:22.147Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13224,"level":30,"msg":"Synced db.","time":"2022-10-25T18:09:22.157Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18072,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:11:41.486Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18072,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:11:41.719Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18072,"level":30,"msg":"Synced db.","time":"2022-10-25T18:11:41.742Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22008,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:12:33.842Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22008,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:12:33.911Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22008,"level":30,"msg":"Synced db.","time":"2022-10-25T18:12:33.931Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":14948,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:12:39.815Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":14948,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:12:39.866Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":14948,"level":30,"msg":"Synced db.","time":"2022-10-25T18:12:39.879Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12416,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:15:26.936Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12416,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:15:27.012Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12416,"level":30,"msg":"Synced db.","time":"2022-10-25T18:15:27.025Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18748,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:15:32.510Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18748,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:15:32.621Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18748,"level":30,"msg":"Synced db.","time":"2022-10-25T18:15:32.650Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12012,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:15:38.793Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12012,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:15:38.866Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12012,"level":30,"msg":"Synced db.","time":"2022-10-25T18:15:38.968Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12012,"level":30,"msg":"register controller started...","time":"2022-10-25T18:15:44.456Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12012,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$Qxa2yEcYdywiqlM1Nz2jT.6XB9jz1mkTenbH7vvjpRvqjGRZcCTe6'\n}","time":"2022-10-25T18:15:44.601Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12012,"level":30,"msg":"register controller parameters... Promise { <pending> }","time":"2022-10-25T18:15:44.604Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":9568,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:17:30.482Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":9568,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:17:30.565Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":9568,"level":30,"msg":"Synced db.","time":"2022-10-25T18:17:30.586Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":16140,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:21:03.211Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":16140,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:21:03.297Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":16140,"level":30,"msg":"Synced db.","time":"2022-10-25T18:21:03.315Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21052,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:22:07.655Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21052,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:22:07.702Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21052,"level":30,"msg":"Synced db.","time":"2022-10-25T18:22:07.711Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12788,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:22:25.381Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12788,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:22:25.431Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12788,"level":30,"msg":"Synced db.","time":"2022-10-25T18:22:25.442Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12788,"level":30,"msg":"register controller started...","time":"2022-10-25T18:22:39.099Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12788,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$t4ES0h7ABK1/6qCdWUNfjOf3aaYMzt4prh3j./Y69mm9HEu.F4/j2'\n}","time":"2022-10-25T18:22:39.284Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":12788,"level":30,"msg":"register Failure details... { code: '200', message: 'user successfully created ..' }","time":"2022-10-25T18:22:39.536Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18384,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:27:01.924Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18384,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:27:02.006Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18384,"level":30,"msg":"Synced db.","time":"2022-10-25T18:27:02.067Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22100,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:28:04.307Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22100,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:28:04.379Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22100,"level":30,"msg":"Synced db.","time":"2022-10-25T18:28:04.396Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":20392,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:28:40.869Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":20392,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:28:40.943Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":20392,"level":30,"msg":"Synced db.","time":"2022-10-25T18:28:40.957Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18652,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:29:19.827Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18652,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:29:19.892Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18652,"level":30,"msg":"Synced db.","time":"2022-10-25T18:29:19.902Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23408,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:30:40.388Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23408,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:30:40.457Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23408,"level":30,"msg":"Synced db.","time":"2022-10-25T18:30:40.476Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19696,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:30:53.280Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19696,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:30:53.378Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19696,"level":30,"msg":"Synced db.","time":"2022-10-25T18:30:53.394Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":10704,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:31:39.062Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":10704,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:31:39.141Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":10704,"level":30,"msg":"Synced db.","time":"2022-10-25T18:31:39.157Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":11896,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:33:12.858Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":11896,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:33:12.920Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":11896,"level":30,"msg":"Synced db.","time":"2022-10-25T18:33:12.936Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13636,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:33:24.650Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13636,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:33:24.699Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13636,"level":30,"msg":"Synced db.","time":"2022-10-25T18:33:24.711Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":1476,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:34:26.083Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":1476,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:34:26.149Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":1476,"level":30,"msg":"Synced db.","time":"2022-10-25T18:34:26.182Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19076,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:34:47.295Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19076,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:34:47.366Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19076,"level":30,"msg":"Synced db.","time":"2022-10-25T18:34:47.377Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":5432,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:40:01.139Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":5432,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:40:01.341Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":5432,"level":30,"msg":"Synced db.","time":"2022-10-25T18:40:01.357Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22772,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:40:28.823Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22772,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:40:28.876Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22772,"level":30,"msg":"Synced db.","time":"2022-10-25T18:40:28.889Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22772,"level":30,"msg":"login controller started...","time":"2022-10-25T18:40:33.061Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22772,"level":30,"msg":"login controller parameters... { email: 'kiran@gmail.com', password: '12345678' }","time":"2022-10-25T18:40:33.061Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22772,"level":30,"msg":"login Failure details... {\n  code: '400',\n  message: ReferenceError: bcrypt is not defined\n      at C:\\projects\\user-api\\userMS\\middlewares\\invokeBackend.js:35:31\n      at processTicksAndRejections (node:internal/process/task_queues:96:5)\n}","time":"2022-10-25T18:40:33.078Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":7100,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:41:53.991Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":7100,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:41:54.056Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":7100,"level":30,"msg":"Synced db.","time":"2022-10-25T18:41:54.072Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":7100,"level":30,"msg":"login controller started...","time":"2022-10-25T18:41:59.736Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":7100,"level":30,"msg":"login controller parameters... { email: 'kiran@gmail.com', password: '12345678' }","time":"2022-10-25T18:41:59.736Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":7100,"level":30,"msg":"login Failure details... {\n  code: '400',\n  message: ReferenceError: bcrypt is not defined\n      at C:\\projects\\user-api\\userMS\\middlewares\\invokeBackend.js:35:39\n      at processTicksAndRejections (node:internal/process/task_queues:96:5)\n}","time":"2022-10-25T18:41:59.750Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":20660,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:42:50.066Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":20660,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:42:50.199Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":20660,"level":30,"msg":"Synced db.","time":"2022-10-25T18:42:50.229Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":20660,"level":30,"msg":"login controller started...","time":"2022-10-25T18:42:52.482Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":20660,"level":30,"msg":"login controller parameters... { email: 'kiran@gmail.com', password: '12345678' }","time":"2022-10-25T18:42:52.482Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":20660,"level":30,"msg":"login Failure details... {\n  code: '400',\n  message: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n      at new NodeError (node:internal/errors:387:5)\n      at ServerResponse.setHeader (node:_http_outgoing:644:11)\n      at ServerResponse.header (C:\\projects\\user-api\\userMS\\node_modules\\express\\lib\\response.js:794:10)\n      at ServerResponse.send (C:\\projects\\user-api\\userMS\\node_modules\\express\\lib\\response.js:174:12)\n      at ServerResponse.json (C:\\projects\\user-api\\userMS\\node_modules\\express\\lib\\response.js:278:15)\n      at C:\\projects\\user-api\\userMS\\middlewares\\invokeBackend.js:38:37 {\n    code: 'ERR_HTTP_HEADERS_SENT'\n  }\n}","time":"2022-10-25T18:42:52.634Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21140,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-25T18:43:51.554Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21140,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-25T18:43:51.621Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21140,"level":30,"msg":"Synced db.","time":"2022-10-25T18:43:51.643Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21140,"level":30,"msg":"login controller started...","time":"2022-10-25T18:43:58.604Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21140,"level":30,"msg":"login controller parameters... { email: 'kiran@gmail.com', password: '12345678' }","time":"2022-10-25T18:43:58.604Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":21140,"level":30,"msg":"login Failure details... {\n  code: '400',\n  message: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n      at new NodeError (node:internal/errors:387:5)\n      at ServerResponse.setHeader (node:_http_outgoing:644:11)\n      at ServerResponse.header (C:\\projects\\user-api\\userMS\\node_modules\\express\\lib\\response.js:794:10)\n      at ServerResponse.send (C:\\projects\\user-api\\userMS\\node_modules\\express\\lib\\response.js:174:12)\n      at ServerResponse.json (C:\\projects\\user-api\\userMS\\node_modules\\express\\lib\\response.js:278:15)\n      at C:\\projects\\user-api\\userMS\\middlewares\\invokeBackend.js:38:37 {\n    code: 'ERR_HTTP_HEADERS_SENT'\n  }\n}","time":"2022-10-25T18:43:58.828Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13728,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T05:41:07.747Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13728,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T05:41:08.039Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13728,"level":30,"msg":"Synced db.","time":"2022-10-26T05:41:08.286Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":10628,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T05:43:28.640Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":10628,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T05:43:28.690Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":10628,"level":30,"msg":"Synced db.","time":"2022-10-26T05:43:28.708Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":10628,"level":30,"msg":"login controller started...","time":"2022-10-26T05:43:41.300Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":10628,"level":30,"msg":"login controller parameters... { email: 'kiran@gmail.com', password: '12345678' }","time":"2022-10-26T05:43:41.301Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":10628,"level":30,"msg":"login Failure details... Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at new NodeError (node:internal/errors:387:5)\n    at ServerResponse.setHeader (node:_http_outgoing:644:11)\n    at ServerResponse.header (C:\\projects\\user-api\\userMS\\node_modules\\express\\lib\\response.js:794:10)\n    at ServerResponse.send (C:\\projects\\user-api\\userMS\\node_modules\\express\\lib\\response.js:174:12)\n    at ServerResponse.json (C:\\projects\\user-api\\userMS\\node_modules\\express\\lib\\response.js:278:15)\n    at C:\\projects\\user-api\\userMS\\middlewares\\invokeBackend.js:38:37 {\n  code: 'ERR_HTTP_HEADERS_SENT'\n}","time":"2022-10-26T05:43:41.537Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":7836,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T05:54:53.811Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":7836,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T05:54:54.080Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":7836,"level":30,"msg":"Synced db.","time":"2022-10-26T05:54:54.110Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":29536,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T05:57:37.582Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":29536,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T05:57:37.634Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":29536,"level":30,"msg":"Synced db.","time":"2022-10-26T05:57:37.647Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":29536,"level":30,"msg":"login controller started...","time":"2022-10-26T05:57:44.332Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":29536,"level":30,"msg":"login controller parameters... { email: 'kiran@gmail.com', password: '12345678' }","time":"2022-10-26T05:57:44.332Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":29536,"level":30,"msg":"login Failure details... Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at new NodeError (node:internal/errors:387:5)\n    at ServerResponse.setHeader (node:_http_outgoing:644:11)\n    at ServerResponse.header (C:\\projects\\user-api\\userMS\\node_modules\\express\\lib\\response.js:794:10)\n    at ServerResponse.send (C:\\projects\\user-api\\userMS\\node_modules\\express\\lib\\response.js:174:12)\n    at ServerResponse.json (C:\\projects\\user-api\\userMS\\node_modules\\express\\lib\\response.js:278:15)\n    at C:\\projects\\user-api\\userMS\\middlewares\\invokeBackend.js:40:37 {\n  code: 'ERR_HTTP_HEADERS_SENT'\n}","time":"2022-10-26T05:57:44.834Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":9208,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T06:25:22.484Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":9208,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T06:25:22.567Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":9208,"level":30,"msg":"Synced db.","time":"2022-10-26T06:25:22.595Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18656,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T06:25:29.062Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18656,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T06:25:29.103Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18656,"level":30,"msg":"Synced db.","time":"2022-10-26T06:25:29.131Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26024,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T06:25:45.070Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26024,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T06:25:45.109Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26024,"level":30,"msg":"Synced db.","time":"2022-10-26T06:25:45.117Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26024,"level":30,"msg":"register controller started...","time":"2022-10-26T06:25:51.635Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26024,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$dd6/IlAsss3sg0N5kUJo..pt6GIcFm2QFEDpyoV4aNneTZsBW5sDq'\n}","time":"2022-10-26T06:25:52.239Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18412,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T06:29:08.703Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18412,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T06:29:08.800Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18412,"level":30,"msg":"Synced db.","time":"2022-10-26T06:29:08.835Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18412,"level":30,"msg":"register controller started...","time":"2022-10-26T06:29:14.869Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18412,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$pPyA5ZCUwyLK6P9WUXpp.untiVgOjz./uLs4PR.y4lZfZdDElcYjG'\n}","time":"2022-10-26T06:29:14.936Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23964,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T06:34:05.314Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23964,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T06:34:05.396Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23964,"level":30,"msg":"Synced db.","time":"2022-10-26T06:34:05.420Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23964,"level":30,"msg":"register controller started...","time":"2022-10-26T06:34:11.803Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23964,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$Qlz39LK6GEPf1mf68p/EluXV6EJ9Ir6aoTgmP2bjCuZm3ivQDvAUO'\n}","time":"2022-10-26T06:34:11.866Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":11836,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T07:31:34.176Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":11836,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T07:31:34.430Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":11836,"level":30,"msg":"Synced db.","time":"2022-10-26T07:31:34.610Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26584,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T07:37:39.560Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26584,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T07:37:39.599Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26584,"level":30,"msg":"Synced db.","time":"2022-10-26T07:37:39.651Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":25444,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T07:42:27.542Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":25444,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T07:42:27.632Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":25444,"level":30,"msg":"Synced db.","time":"2022-10-26T07:42:27.679Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27248,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T07:44:33.610Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27248,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T07:44:33.654Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27248,"level":30,"msg":"Synced db.","time":"2022-10-26T07:44:33.763Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24632,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T07:45:29.180Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24632,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T07:45:29.236Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24632,"level":30,"msg":"Synced db.","time":"2022-10-26T07:45:29.552Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":29132,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T07:47:42.825Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":29132,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T07:47:42.924Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":29132,"level":30,"msg":"Synced db.","time":"2022-10-26T07:47:42.933Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24600,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T07:48:11.009Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24600,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T07:48:11.069Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24600,"level":30,"msg":"Synced db.","time":"2022-10-26T07:48:11.121Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24540,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T07:56:23.156Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24540,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T07:56:23.301Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24540,"level":30,"msg":"Synced db.","time":"2022-10-26T07:56:23.373Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24540,"level":30,"msg":"register controller started...","time":"2022-10-26T07:56:33.353Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24540,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$TD8nUqAc/RVnGxQyG8N4ne6zU5nW7vdGdn2W5lBB7loJP3ZneAtVy'\n}","time":"2022-10-26T07:56:33.529Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24540,"level":30,"msg":"registration Failure details... ReferenceError: data is not defined\n    at C:\\projects\\user-api\\userMS\\middlewares\\invokeBackend.js:40:20\n    at new Promise (<anonymous>)\n    at Object.createUser (C:\\projects\\user-api\\userMS\\middlewares\\invokeBackend.js:8:12)\n    at register (C:\\projects\\user-api\\userMS\\controllers\\register.controller.js:25:51)","time":"2022-10-26T07:56:33.554Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24540,"level":50,"msg":"registration status code :206status Response{\"content\":{\"code\":\"206\",\"description\":\"Registration not successfully\"}}","time":"2022-10-26T07:56:33.567Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":5076,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T07:56:53.378Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":5076,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T07:56:53.471Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":5076,"level":30,"msg":"Synced db.","time":"2022-10-26T07:56:53.695Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24280,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T07:57:02.215Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24280,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T07:57:02.383Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24280,"level":30,"msg":"Synced db.","time":"2022-10-26T07:57:02.432Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27444,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T07:57:11.613Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27444,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T07:57:11.675Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27444,"level":30,"msg":"Synced db.","time":"2022-10-26T07:57:11.717Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28508,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T07:57:35.770Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28508,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T07:57:35.815Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28508,"level":30,"msg":"Synced db.","time":"2022-10-26T07:57:35.827Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":1236,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T07:58:17.759Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":1236,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T07:58:17.858Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":1236,"level":30,"msg":"Synced db.","time":"2022-10-26T07:58:17.891Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":25696,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T07:58:29.229Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":25696,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T07:58:29.332Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":25696,"level":30,"msg":"Synced db.","time":"2022-10-26T07:58:29.352Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":25696,"level":30,"msg":"register controller started...","time":"2022-10-26T07:58:32.232Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":25696,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$d5s4I4VT4Rf9f/bP6sV/eulc5Q/GMr2cUnJEQLSuXWdGj9oLANFLi'\n}","time":"2022-10-26T07:58:32.307Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":25696,"level":50,"msg":"registration status code :206status Response{\"content\":{\"code\":\"206\",\"description\":\"Registration not successfully\"}}","time":"2022-10-26T07:58:32.311Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":25572,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:00:18.603Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":25572,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:00:18.657Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":25572,"level":30,"msg":"Synced db.","time":"2022-10-26T08:00:18.669Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":14488,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:00:27.109Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":14488,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:00:27.215Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":14488,"level":30,"msg":"Synced db.","time":"2022-10-26T08:00:27.265Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":2884,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:00:36.482Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":2884,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:00:36.605Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":2884,"level":30,"msg":"Synced db.","time":"2022-10-26T08:00:36.643Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":2884,"level":30,"msg":"register controller started...","time":"2022-10-26T08:00:39.080Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":2884,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$kC8.APbcCACONEaR/Ir.5.DAxseGemrUi4KHl/n1pEntaIpm7H.XS'\n}","time":"2022-10-26T08:00:39.149Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":2884,"level":50,"msg":"registration status code :206status Response{\"content\":{\"code\":\"206\",\"description\":\"Registration not successfully\"}}","time":"2022-10-26T08:00:39.156Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":2884,"level":30,"msg":"register controller started...","time":"2022-10-26T08:00:53.629Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":2884,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$jQ7/bH.bfxVi3eX9jjDnSuuyaX92AH11cvUviLABusOH4wtHE3/UK'\n}","time":"2022-10-26T08:00:53.792Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":2884,"level":50,"msg":"registration status code :206status Response{\"content\":{\"code\":\"206\",\"description\":\"Registration not successfully\"}}","time":"2022-10-26T08:00:53.797Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22716,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:01:14.611Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22716,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:01:14.663Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22716,"level":30,"msg":"Synced db.","time":"2022-10-26T08:01:14.672Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22716,"level":30,"msg":"register controller started...","time":"2022-10-26T08:01:22.718Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22716,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$fnHCjGxj6MIPAryi2kFD6Or9q9olLkKzUCVT.1cjJ0CCmTy7A/FIe'\n}","time":"2022-10-26T08:01:22.785Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22716,"level":50,"msg":"registration status code :206status Response{\"content\":{\"code\":\"206\",\"description\":\"Registration not successfully\"}}","time":"2022-10-26T08:01:22.791Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23276,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:01:35.288Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23276,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:01:35.370Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":23276,"level":30,"msg":"Synced db.","time":"2022-10-26T08:01:35.385Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":8680,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:01:46.288Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":8680,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:01:46.393Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":8680,"level":30,"msg":"Synced db.","time":"2022-10-26T08:01:46.415Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":8680,"level":30,"msg":"register controller started...","time":"2022-10-26T08:01:49.305Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":8680,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$KjqAxB/HVPln.dzoouxgiuVCpVsjXaJnTdO2zHmXl5JfEc7Ly8.EK'\n}","time":"2022-10-26T08:01:49.378Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":8680,"level":50,"msg":"registration status code :206status Response{\"content\":{\"code\":\"206\",\"description\":\"Registration not successfully\"}}","time":"2022-10-26T08:01:49.383Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":8680,"level":30,"msg":"register controller started...","time":"2022-10-26T08:01:57.052Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":8680,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$rFAcbsYvcaltfu29nfIqvu9ybb0TqD6KyWLC/EM1TixnAiUZHRePe'\n}","time":"2022-10-26T08:01:57.234Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":8680,"level":50,"msg":"registration status code :206status Response{\"content\":{\"code\":\"206\",\"description\":\"Registration not successfully\"}}","time":"2022-10-26T08:01:57.238Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13820,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:04:04.625Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13820,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:04:04.679Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13820,"level":30,"msg":"Synced db.","time":"2022-10-26T08:04:04.775Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13820,"level":30,"msg":"register controller started...","time":"2022-10-26T08:04:08.007Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13820,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$4mfM6VK7h7XusTE1BSg43.gNjlQbM98cF5LAewOFUx5ZBzGdKoVEG'\n}","time":"2022-10-26T08:04:08.075Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":13820,"level":30,"msg":"registration status code :200status Response{\"content\":{\"esponse\":{\"message\":\"This email is taken\"}}}","time":"2022-10-26T08:04:08.080Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":17860,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:04:40.797Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":17860,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:04:40.867Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":17860,"level":30,"msg":"Synced db.","time":"2022-10-26T08:04:40.881Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26176,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:05:03.148Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26176,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:05:03.209Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26176,"level":30,"msg":"Synced db.","time":"2022-10-26T08:05:03.223Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26176,"level":30,"msg":"register controller started...","time":"2022-10-26T08:05:09.001Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26176,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$33ehSbewNndI01Ut2LhzLOwpWKf6a5T7SOHKf621QR8iKkIA3EKAy'\n}","time":"2022-10-26T08:05:09.067Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26176,"level":30,"msg":"registration Failure details... { message: 'This email is taken' }","time":"2022-10-26T08:05:09.070Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26176,"level":30,"msg":"registration status code :200status Response{\"content\":{\"esponse\":{\"message\":\"This email is taken\"}}}","time":"2022-10-26T08:05:09.074Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26176,"level":30,"msg":"register controller started...","time":"2022-10-26T08:05:23.426Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26176,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran1@gmail.com',\n  password: '$2b$10$ZDOCfDqB.Ryg3GKWnA0DOeEdGnykkue4JXy2TTvV0oQiP0pGPcADa'\n}","time":"2022-10-26T08:05:23.494Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26176,"level":30,"msg":"registration Failure details... { message: 'This email is taken' }","time":"2022-10-26T08:05:23.495Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26176,"level":30,"msg":"registration status code :200status Response{\"content\":{\"esponse\":{\"message\":\"This email is taken\"}}}","time":"2022-10-26T08:05:23.496Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26176,"level":30,"msg":"register controller started...","time":"2022-10-26T08:07:40.844Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26176,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran1@gmail.com',\n  password: '$2b$10$2KazDhKgWl34vII4rBN4YewkRuNRBrtb5Bw/dBr.QEXHByMQ2QUH2'\n}","time":"2022-10-26T08:07:41.022Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26176,"level":30,"msg":"registration Failure details... { message: 'This email is taken' }","time":"2022-10-26T08:07:41.026Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26176,"level":30,"msg":"registration status code :200status Response{\"content\":{\"esponse\":{\"message\":\"This email is taken\"}}}","time":"2022-10-26T08:07:41.027Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26704,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:08:46.179Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26704,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:08:46.247Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":26704,"level":30,"msg":"Synced db.","time":"2022-10-26T08:08:46.257Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27916,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:09:20.027Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27916,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:09:20.071Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27916,"level":30,"msg":"Synced db.","time":"2022-10-26T08:09:20.081Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18576,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:11:22.321Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18576,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:11:22.408Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18576,"level":30,"msg":"Synced db.","time":"2022-10-26T08:11:22.434Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18576,"level":30,"msg":"register controller started...","time":"2022-10-26T08:11:26.624Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18576,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran1@gmail.com',\n  password: '$2b$10$pydKTdKsmHgGzCm9RjaVFe0a6fOMhYmEz9Mh.EGPEPd6CWMVD1Slu'\n}","time":"2022-10-26T08:11:26.704Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18576,"level":30,"msg":"registration Failure details... TypeError: userdetails.save is not a function\n    at C:\\projects\\user-api\\userMS\\middlewares\\invokeBackend.js:22:29\n    at new Promise (<anonymous>)\n    at Object.createUser (C:\\projects\\user-api\\userMS\\middlewares\\invokeBackend.js:8:12)\n    at register (C:\\projects\\user-api\\userMS\\controllers\\register.controller.js:25:51)","time":"2022-10-26T08:11:26.723Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":18576,"level":50,"msg":"registration status code :206status Response{\"content\":{\"code\":\"206\",\"description\":\"Registration not successfull\"}}","time":"2022-10-26T08:11:26.730Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22992,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:12:11.176Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22992,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:12:11.216Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":22992,"level":30,"msg":"Synced db.","time":"2022-10-26T08:12:11.227Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19416,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:13:10.055Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19416,"level":30,"msg":"Synced db.","time":"2022-10-26T08:13:10.104Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19416,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:13:10.109Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28072,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:13:11.822Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28072,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:13:11.880Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28072,"level":30,"msg":"Synced db.","time":"2022-10-26T08:13:11.892Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24424,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:14:33.561Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24424,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:14:33.623Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24424,"level":30,"msg":"Synced db.","time":"2022-10-26T08:14:33.631Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24424,"level":30,"msg":"register controller started...","time":"2022-10-26T08:14:37.084Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24424,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran1@gmail.com',\n  password: '$2b$10$a4r8lYtHX5bzUXaGzFudMuZ3dnwLRqfN4Y51g5b2/xe5Wo8N5HC7G'\n}","time":"2022-10-26T08:14:37.158Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24424,"level":30,"msg":"registration Failure details... TypeError: userdetails.save is not a function\n    at C:\\projects\\user-api\\userMS\\middlewares\\invokeBackend.js:23:29\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","time":"2022-10-26T08:14:37.166Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24424,"level":50,"msg":"registration status code :206status Response{\"content\":{\"code\":\"206\",\"description\":\"Registration not successfull\"}}","time":"2022-10-26T08:14:37.167Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":25028,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:16:43.309Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":25028,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:16:43.423Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":25028,"level":30,"msg":"Synced db.","time":"2022-10-26T08:16:43.438Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28572,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:16:46.474Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28572,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:16:46.545Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28572,"level":30,"msg":"Synced db.","time":"2022-10-26T08:16:46.562Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28572,"level":30,"msg":"register controller started...","time":"2022-10-26T08:16:53.620Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28572,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran1@gmail.com',\n  password: '$2b$10$anV8vUJAevp4Y0AHx9yKaO3uZMN/t9vOxHUSiDYeh42mGLVhxYK/e'\n}","time":"2022-10-26T08:16:53.792Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28572,"level":30,"msg":"registration Failure details... TypeError: userdetails.save is not a function\n    at C:\\projects\\user-api\\userMS\\middlewares\\invokeBackend.js:23:29\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","time":"2022-10-26T08:16:53.813Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28572,"level":50,"msg":"registration status code :206status Response{\"content\":{\"code\":\"206\",\"description\":\"Registration not successfull\"}}","time":"2022-10-26T08:16:53.813Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28572,"level":30,"msg":"register controller started...","time":"2022-10-26T08:16:57.788Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28572,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran1@gmail.com',\n  password: '$2b$10$jSTvhhSLg0Tvv85lrfFjhu14fy/tEjTx.rLHVUIER3LHYRrnuUoYS'\n}","time":"2022-10-26T08:16:57.958Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28572,"level":30,"msg":"registration Failure details... TypeError: userdetails.save is not a function\n    at C:\\projects\\user-api\\userMS\\middlewares\\invokeBackend.js:23:29\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","time":"2022-10-26T08:16:57.965Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28572,"level":50,"msg":"registration status code :206status Response{\"content\":{\"code\":\"206\",\"description\":\"Registration not successfull\"}}","time":"2022-10-26T08:16:57.966Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28804,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:18:42.797Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28804,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:18:42.847Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":28804,"level":30,"msg":"Synced db.","time":"2022-10-26T08:18:42.858Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19168,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:18:52.122Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19168,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:18:52.166Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19168,"level":30,"msg":"Synced db.","time":"2022-10-26T08:18:52.178Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19168,"level":30,"msg":"register controller started...","time":"2022-10-26T08:18:56.378Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19168,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran1@gmail.com',\n  password: '$2b$10$VooMsM9HhLyABf0.HUXSkOMcveu2468dWOTydnvYT9y6oLkzhybFe'\n}","time":"2022-10-26T08:18:56.443Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":19168,"level":50,"msg":"registration status code :206status Response{\"content\":{\"code\":\"206\",\"description\":\"Registration not successfully\"}}","time":"2022-10-26T08:18:56.451Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27804,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:19:15.137Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27804,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:19:15.208Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27804,"level":30,"msg":"Synced db.","time":"2022-10-26T08:19:15.219Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27804,"level":30,"msg":"register controller started...","time":"2022-10-26T08:19:25.632Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27804,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran1@gmail.com',\n  password: '$2b$10$Vh5SZgz8KPJXRdWwsH0/xe/CvWk84Q.xicEEei/xFoaSziTg/0e7S'\n}","time":"2022-10-26T08:19:25.788Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27804,"level":30,"msg":"registration Failure details... { message: 'This email is taken' }","time":"2022-10-26T08:19:25.838Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27804,"level":30,"msg":"registration status code :200status Response{\"content\":{\"esponse\":{\"message\":\"This email is taken\"}}}","time":"2022-10-26T08:19:25.839Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27804,"level":30,"msg":"register controller started...","time":"2022-10-26T08:19:39.723Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27804,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$Bn.GwJcvxZwJTDoMaPG/X.X6zjVqIh.2WptomQKpRYBKJvJ7xihGm'\n}","time":"2022-10-26T08:19:39.894Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27804,"level":50,"msg":"registration status code :206status Response{\"content\":{\"code\":\"206\",\"description\":\"Registration not successfully\"}}","time":"2022-10-26T08:19:39.912Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27804,"level":30,"msg":"registration Failure details... users {\n  dataValues: {\n    id: 4,\n    first_name: 'kiran',\n    last_name: '1234',\n    user_id: '1234',\n    email: 'kiran@gmail.com',\n    password: '$2b$10$Bn.GwJcvxZwJTDoMaPG/X.X6zjVqIh.2WptomQKpRYBKJvJ7xihGm',\n    updatedAt: 2022-10-26T08:19:39.911Z,\n    createdAt: 2022-10-26T08:19:39.911Z\n  },\n  _previousDataValues: {\n    first_name: 'kiran',\n    last_name: '1234',\n    user_id: '1234',\n    email: 'kiran@gmail.com',\n    password: '$2b$10$Bn.GwJcvxZwJTDoMaPG/X.X6zjVqIh.2WptomQKpRYBKJvJ7xihGm',\n    id: 4,\n    createdAt: 2022-10-26T08:19:39.911Z,\n    updatedAt: 2022-10-26T08:19:39.911Z\n  },\n  uniqno: 1,\n  _changed: Set(0) {},\n  _options: { isNewRecord: true, _schema: null, _schemaDelimiter: '' },\n  isNewRecord: false\n}","time":"2022-10-26T08:19:40.102Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27948,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:21:11.536Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27948,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:21:11.608Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27948,"level":30,"msg":"Synced db.","time":"2022-10-26T08:21:11.633Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24936,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:23:14.719Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24936,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:23:14.793Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24936,"level":30,"msg":"Synced db.","time":"2022-10-26T08:23:14.804Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24936,"level":30,"msg":"register controller started...","time":"2022-10-26T08:23:16.979Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24936,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran@gmail.com',\n  password: '$2b$10$6lmA6lUrNUI10QmWREb5mue5/8NGDzyer81KUT1TjO.aXwFqB0Ivm'\n}","time":"2022-10-26T08:23:17.052Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24936,"level":30,"msg":"registration Failure details... { message: 'This email is taken' }","time":"2022-10-26T08:23:17.064Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24936,"level":30,"msg":"registration status code :200status Response{\"content\":{\"esponse\":{\"message\":\"This email is taken\"}}}","time":"2022-10-26T08:23:17.064Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24936,"level":30,"msg":"register controller started...","time":"2022-10-26T08:23:25.628Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24936,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran2@gmail.com',\n  password: '$2b$10$hUDTbGHRcAIgcpx4CW.Ak.hqK0ZfcZ3PIk7TmDg6YfvUR9n1SELGS'\n}","time":"2022-10-26T08:23:25.701Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24936,"level":50,"msg":"registration status code :206status Response{\"content\":{\"code\":\"206\",\"description\":\"Registration not successfully\"}}","time":"2022-10-26T08:23:25.708Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":24936,"level":30,"msg":"registration Successfull details... users {\n  dataValues: {\n    id: 5,\n    first_name: 'kiran',\n    last_name: '1234',\n    user_id: '1234',\n    email: 'kiran2@gmail.com',\n    password: '$2b$10$hUDTbGHRcAIgcpx4CW.Ak.hqK0ZfcZ3PIk7TmDg6YfvUR9n1SELGS',\n    updatedAt: 2022-10-26T08:23:25.707Z,\n    createdAt: 2022-10-26T08:23:25.707Z\n  },\n  _previousDataValues: {\n    first_name: 'kiran',\n    last_name: '1234',\n    user_id: '1234',\n    email: 'kiran2@gmail.com',\n    password: '$2b$10$hUDTbGHRcAIgcpx4CW.Ak.hqK0ZfcZ3PIk7TmDg6YfvUR9n1SELGS',\n    id: 5,\n    createdAt: 2022-10-26T08:23:25.707Z,\n    updatedAt: 2022-10-26T08:23:25.707Z\n  },\n  uniqno: 1,\n  _changed: Set(0) {},\n  _options: { isNewRecord: true, _schema: null, _schemaDelimiter: '' },\n  isNewRecord: false\n}","time":"2022-10-26T08:23:26.058Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27460,"level":30,"msg":"UserMs started listing PORT 3000","time":"2022-10-26T08:26:27.718Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27460,"level":30,"msg":"Connection has been established successfully.","time":"2022-10-26T08:26:27.799Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27460,"level":30,"msg":"Synced db.","time":"2022-10-26T08:26:27.822Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27460,"level":30,"msg":"register controller started...","time":"2022-10-26T08:26:29.119Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27460,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran2@gmail.com',\n  password: '$2b$10$9uD6hhIfA9dvuDszH38wVO2eizFClYUQXwz7Kj5u6hxkYzw.9oqty'\n}","time":"2022-10-26T08:26:29.194Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27460,"level":30,"msg":"registration Failure details... { message: 'This email is taken' }","time":"2022-10-26T08:26:29.206Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27460,"level":30,"msg":"registration status code :200status Response{\"content\":{\"esponse\":{\"message\":\"This email is taken\"}}}","time":"2022-10-26T08:26:29.206Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27460,"level":30,"msg":"register controller started...","time":"2022-10-26T08:27:03.739Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27460,"level":30,"msg":"register controller parameters... {\n  first_name: 'kiran',\n  last_name: '1234',\n  user_id: '1234',\n  email: 'kiran3@gmail.com',\n  password: '$2b$10$7tMqdMG.4nX/RjGYRQJe5ucjJFdMcrhJSSlpbym2cSaFvz654tStG'\n}","time":"2022-10-26T08:27:03.900Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27460,"level":50,"msg":"registration status code :206status Response{\"content\":{\"code\":\"206\",\"description\":\"Registration not successfully\"}}","time":"2022-10-26T08:27:03.931Z","v":0}
{"name":"userMS-DEV","hostname":"DESKTOP-NC394PI","pid":27460,"level":30,"msg":"registration Successfull details... users {\n  dataValues: {\n    id: 6,\n    first_name: 'kiran',\n    last_name: '1234',\n    user_id: '1234',\n    email: 'kiran3@gmail.com',\n    password: '$2b$10$7tMqdMG.4nX/RjGYRQJe5ucjJFdMcrhJSSlpbym2cSaFvz654tStG',\n    updatedAt: 2022-10-26T08:27:03.930Z,\n    createdAt: 2022-10-26T08:27:03.930Z\n  },\n  _previousDataValues: {\n    first_name: 'kiran',\n    last_name: '1234',\n    user_id: '1234',\n    email: 'kiran3@gmail.com',\n    password: '$2b$10$7tMqdMG.4nX/RjGYRQJe5ucjJFdMcrhJSSlpbym2cSaFvz654tStG',\n    id: 6,\n    createdAt: 2022-10-26T08:27:03.930Z,\n    updatedAt: 2022-10-26T08:27:03.930Z\n  },\n  uniqno: 1,\n  _changed: Set(0) {},\n  _options: { isNewRecord: true, _schema: null, _schemaDelimiter: '' },\n  isNewRecord: false\n}","time":"2022-10-26T08:27:04.176Z","v":0}
